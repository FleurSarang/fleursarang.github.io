{"version":3,"sources":["Components/TableForm.js","Containers/InfoTableContainer.js","Containers/BasicInfo.js","Components/ResultForm.js","Containers/TitleRow.js","Containers/SwatchTable.js","Containers/SexInfo.js","utils/constants.js","Containers/SizeInifo.js","Styles/styles.js","Containers/StartStitches.js","Containers/AppMain.js","App.js","utils/gaConfig.js","reportWebVitals.js","index.js"],"names":["TableForm","props","label","txtInfo","feildLen","length","colSize","labelColSize","Fragment","Grid","container","spacing","padding","flexdirection","justify","justifyContent","alignItems","item","xs","sm","lg","Typography","color","align","sx","mt","fontSize","fontWeight","map","info","idx","variant","TextField","required","id","name","txtLabel","fullWidth","autoComplete","onChange","type","inputProps","inputMode","pattern","InputProps","endAdornment","InputAdornment","position","InfoTableContainer","Paper","my","md","p","children","BasicInfo","basicInfo","ResultForm","results","labelComponent","totalCol","Math","round","disabled","TitleRow","titles","console","log","title","SwatchTable","context","useContext","appContext","useState","beforeSts","setBeforeSts","beforeRows","setBeforeRows","afterSts","setAfterSts","afterRows","setAfterRows","useEffect","setContractionSts","toFixed","setContractionRows","contractionSts","contractionRows","swatchInfo","e","target","value","SexInfo","sexInfo","BRAND_YOUTUBE","BRAND_INSTAGRAM","BRAND_RAVELRY","BRAND_ETSY","SizeInfo","divSleeves","setdivSleeves","neckBack","totalSts","setTotalSts","raglanSts","divide","setSleevesSts","sleevesSts","back","setBackSts","sizeInfo","setNeckBack","setRaglanSts","resSts","backSts","res","linkStyle","styled","size","Box","bgcolor","generateBrandStyles","brand","brandColor","getBrandColor","link","StartStitches","startInfoLable","React","createContext","displayName","AppProvider","contextValue","Provider","MyLink","brandStyles","styles","makeStyles","Link","className","rel","href","icon","Copyright","flexGrow","Date","getFullYear","faYoutube","faInstagram","faRavelry","faEtsy","Header","display","pb","AppBar","elevation","borderBottom","t","palette","divider","Toolbar","noWrap","Footer","pt","top","bottom","borderTop","AppMain","width","Container","component","maxWidth","mb","CssBaseline","theme","createTheme","tagManagerArgs","gtmId","TagManager","initialize","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8947df6c.chunk.js","sourcesContent":["import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport { InputAdornment } from '@mui/material';\n\nconst TableForm = (props) => {\n    const { label = \"none\", txtInfo=[] } = props;\n    let feildLen = txtInfo.length;\n    const colSize = feildLen > 1 ? (8 / feildLen) : 8;\n    let labelColSize = props.txtInfo ? 3 : 12;\n    \n    return (\n        <React.Fragment>\n            <Grid container \n                 spacing={1} padding={0} \n                 flexdirection=\"row\" justify=\"center\" justifyContent=\"center\" \n                 alignItems=\"ceneter\">\n                \n                <Grid item xs={labelColSize} sm={labelColSize} lg={labelColSize}>\n                    <Typography color=\"primary\" align=\"center\" \n                        sx={{ mt: 2.3, fontSize: \"1em\", fontWeight: 500}} >\n                        {label}\n                    </Typography>\n                </Grid>\n\n                {txtInfo.map((info, idx) => {\n                    let variant = info.variant ? info.variant : \"standard\";\n                    return  (\n                    <Grid item key={idx} xs={colSize} sm={colSize}>\n                        <TextField\n                            required={info.required}\n                            id={info.id}\n                            name={info.id}\n                            label={info.txtLabel}\n                            fullWidth\n                            autoComplete=\"no info\"\n                            variant={variant}\n                            onChange={info.onChange}\n                            type={info.type}\n                            inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }}\n                            InputProps = { { endAdornment: <InputAdornment position=\"end\">{info.endAdornment}</InputAdornment> } }\n                        />\n                    </Grid>\n                    )}\n                    \n                )}\n            </Grid>\n        </React.Fragment>\n        );\n    }\n\nexport default TableForm;","import React from 'react';\nimport Paper from '@mui/material/Paper';\n\n\n\nconst InfoTableContainer = (props) => (\n    <React.Fragment>\n         <Paper variant=\"outlined\" sx={{ my: { xs: 2, md: 3 }, p: 0 }}>\n            {props.children}\n        </Paper>\n    </React.Fragment>\n);\n\n\nexport default InfoTableContainer;","import React from 'react';\nimport TableForm from '../Components/TableForm';\nimport InfoTableContainer from './InfoTableContainer';\n\n\n\nconst BasicInfo = (props) => {\n\n    const basicInfo = [\n        {\n            label: \"실 정보\",\n            txtInfo: [{\n                id: \"yarnInfo\",\n                txtLabel: \"실 정보를 입력하세요\",\n                required: false,\n            }],\n        },\n        {\n            label: \"바늘 사이즈\",\n            txtInfo: [{\n                id: \"needleSize\",\n                txtLabel: \"바늘 사이즈를 입력하세요\",\n                required: false,\n                },\n            ],\n        },\n    ];\n    \n    return (\n    <React.Fragment>\n         <InfoTableContainer>\n            <TableForm label={basicInfo[0].label} txtInfo={basicInfo[0].txtInfo} />\n            <TableForm label={basicInfo[1].label} txtInfo={basicInfo[1].txtInfo} />\n        </InfoTableContainer>\n    </React.Fragment>\n    );\n}\n\n\nexport default BasicInfo;","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport { InputAdornment } from '@mui/material';\n\nconst ResultForm = (props) => {\n    const { label, results=[]} = props;\n    \n    let labelComponent = null;\n    if(label) {\n        let labelColSize = props.results ? 3 : 12;\n        labelComponent = (\n            <Grid item xs={labelColSize} sm={labelColSize} lg={labelColSize}>\n                <Typography color=\"secondary\" align=\"center\" \n                    sx={{ mt: 2.3, fontSize: \"1em\", fontWeight: 500}} >\n                    {label}\n                </Typography>\n            </Grid>\n        );\n    }\n    \n\n    let feildLen = results.length;\n    let totalCol = labelComponent ? 8 : 12\n    let colSize = feildLen > 1 ? Math.round(totalCol / feildLen) : totalCol;\n    \n    return (\n        <React.Fragment>\n            <Grid container flexdirection=\"column\" justify=\"center\" justifyContent=\"center\" \n                alignItems=\"ceneter\" spacing={2}\n                >\n                \n                {labelComponent}\n\n                {results.map((info, idx) => {\n                    let variant = info.variant ? info.variant : \"standard\";\n                    \n                    return(\n                    <Grid item key={idx} xs={colSize} sm={colSize}>\n                        <TextField\n                            disabled\n                            color=\"info\"\n                            id={info.id}\n                            name={info.id}\n                            label={info.txtLabel ? info.txtLabel : \"\"}\n                            variant={variant}\n                            onChange={info.onChange ? info.onChange : null}\n                            fullWidth\n                            type={info.type}\n                            inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }}\n                            InputProps = {{ endAdornment: <InputAdornment position=\"end\">{info.endAdornment}</InputAdornment> } }\n                        />\n                    </Grid>\n                    );\n                })}\n            </Grid>\n        </React.Fragment>\n        );\n    }\n\nexport default ResultForm;","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\n\nconst TitleRow = (props) => {\n    const titles = props.titles;\n    const colSize = `${(titles.length * 100) / 12} %`;\n    let fontSize = \"1em\";\n\n    console.log(\"colsize::::\", colSize);\n\n    return (\n        <React.Fragment>\n            <Grid container flexdirection=\"column\" justify=\"center\" justifyContent=\"center\" alignItems=\"ceneter\" spacing={2}>\n            {\n                titles.map((title, idx) => {\n                    console.log(\"!!!!!title: \", title);\n                    return (\n                    <Grid item key={idx} xs={colSize} >\n                        <Typography color=\"primary\" align=\"center\" variant=\"h6\" \n                            sx={{ mt: 2.3, fontSize: {fontSize}, fontWeight: 500}} >\n                            {title}\n                        </Typography>\n                    </Grid>\n                )})\n            }\n            </Grid>\n        </React.Fragment>\n    );\n}\n\nexport default TitleRow;","import React, { useContext, useEffect, useState } from 'react';\nimport TableForm from '../Components/TableForm';\nimport InfoTableContainer from './InfoTableContainer';\nimport ResultForm from '../Components/ResultForm';\nimport { appContext } from './AppMain';\nimport TitleRow from './TitleRow';\n\n\nconst SwatchTable = (props) => {\n    let context = useContext(appContext);\n    const [beforeSts, setBeforeSts] = useState(0);\n    const [beforeRows, setBeforeRows] = useState(0);\n    const [afterSts, setAfterSts] = useState(0);\n    const [afterRows, setAfterRows] = useState(0);\n\n    useEffect(() => {\n        // 수축률 = 세탁 전 / 세탁 후 * 100\n        if (beforeSts > 0 && afterSts > 0) {\n            let res = (beforeSts / afterSts) * 100;\n            setContractionSts(res.toFixed(2));\n        }\n    }, [beforeSts, afterSts]);\n\n    useEffect(() => {\n        // 수축률 = 세탁 전 / 세탁 후 * 100\n        if(beforeRows > 0 && afterRows > 0) {\n            let res = (beforeRows / afterRows) * 100;\n            setContractionRows(res.toFixed(2));\n        }\n\n    }, [beforeRows, afterRows]);\n\n    const [contractionSts, setContractionSts] = useState(0);\n    const [contractionRows, setContractionRows] = useState(0);\n    \n\n    const handleChangeBeforeStitches = e => {\n        setBeforeSts(e.target.value);\n    }\n\n    const handleChangeBeforeRows = e => {\n        setBeforeRows(e.target.value);\n    }\n    const handleChangeAfterStitches = e => {\n        setAfterSts(e.target.value);\n        context.setAfterSts(e.target.value);\n    }\n\n    const handleChangeAfterRows = e => {\n        setAfterRows(e.target.value);\n    }\n\n    const swatchInfo = [\n        {\n            label: \"세탁 전\",\n            txtInfo: [\n                {\n                    id: \"beforeSts\",\n                    txtLabel: \"(숫자만)\",\n                    type: \"number\",\n                    required: true,\n                    onChange: handleChangeBeforeStitches,\n                    endAdornment: \"코\",\n                },\n                {\n                    id: \"beforeRows\",\n                    txtLabel: \"(숫자만)\",\n                    type: \"number\",\n                    required: true,\n                    onChange: handleChangeBeforeRows,\n                    endAdornment: \"단\",\n                }\n            ],\n        },\n        \n        {\n            label: \"세탁 후\",\n            txtInfo: [\n                {\n                    id: \"afterSts\",\n                    txtLabel: \"(숫자만)\",\n                    type: \"number\",\n                    required: true,\n                    onChange: handleChangeAfterStitches,\n                    endAdornment: \"코\",\n                },\n                {\n                    id: \"afterRows\",\n                    txtLabel: \"(숫자만)\",\n                    type: \"number\",\n                    required: true,\n                    onChange: handleChangeAfterRows,\n                    endAdornment: \"단\",\n                }\n            ],\n        },\n    ];\n\n\n    const results = [\n        {\n            label: \"수축률\",\n            results: [\n                {\n                    id: \"resSts\",\n                    txtLabel: `${contractionSts} %`,\n                    onChange: null,\n                    variant: \"filled\",\n                },\n                {\n                    id: \"resRows\",\n                    txtLabel: `${contractionRows} %`,\n                    onChange: null,\n                    variant: \"filled\",\n                }\n            ],\n        },\n    ];\n\n    const rowTitles = [\"Swatch\", \"코 수\", \" 단 수\"];\n\n    return (\n        <React.Fragment>\n             <InfoTableContainer>\n                 <TitleRow titles={rowTitles} />\n\n                {\n                    swatchInfo.map((info, idx) => (\n                        <TableForm key={idx} label={info.label} txtInfo={info.txtInfo} />\n                    ))\n                 }\n                <ResultForm label={results[0].label} results={results[0].results} />\n            </InfoTableContainer>\n        </React.Fragment>\n        );\n}\n\n\nexport default SwatchTable;","import React from 'react';\nimport TableForm from '../Components/TableForm';\nimport InfoTableContainer from './InfoTableContainer';\n\n\n\nconst SexInfo = (props) => {\n\n    const sexInfo = [\n        {\n            label: \"성별\",\n            txtInfo: [{\n                id: \"sexInfo\",\n                txtLabel: \"성별을 입력하세요\",\n            }],\n        },\n    ];\n    \n    return (\n    <React.Fragment>\n         <InfoTableContainer>\n            <TableForm label={sexInfo[0].label} txtInfo={sexInfo[0].txtInfo} />\n        </InfoTableContainer>\n    </React.Fragment>\n    );\n}\n\n\nexport default SexInfo;","export const SITE_NAME = \"Fleur Sarang Crochet\";\nexport const BRAND_YOUTUBE = \"YOUTUBE\";\nexport const BRAND_INSTAGRAM = \"INSTAGRAM\";\nexport const BRAND_RAVELRY = \"RAVELLRY\";\nexport const BRAND_ETSY = \"ETSY\";\nexport const DIVIDE_SLEEVE_COUNT = 7;","import React, { useContext, useEffect, useState } from 'react';\nimport TableForm from '../Components/TableForm';\nimport InfoTableContainer from './InfoTableContainer';\nimport ResultForm from '../Components/ResultForm';\nimport { appContext } from './AppMain';\nimport { DIVIDE_SLEEVE_COUNT } from '../utils/constants';\n\nconst SizeInfo = (props) => {\n    // 아래 스테이트들 AppMain Dp context provider 로 옮김\n    // const [neckBack, setNeckBack] = useState(0);\n    // const [raglanSts, setRaglanSts] = useState(2);\n    const [divSleeves, setdivSleeves] = useState(0); // 소매 나눔 수\n    // const [totalSts, setTotalSts] = useState(48); // 총 콧 수\n    // const [sleevesSts, setSleevesSts] = useState(0); // 소매 코수\n    // const [backSts, setBackSts] = useState(0); // 뒷판 코수\n    let context = useContext(appContext);\n\n    useEffect(() => {\n        let afterSts = context.afterSts;\n        let neckBack = context.neckBack;\n        // 총 콧수 = 세탁후 코수 * (뒷목 둘레 /10)\n        if(neckBack > 0){\n            let totalSts = afterSts * (neckBack / 10);\n            context.setTotalSts(totalSts);\n            context.setTotalSts(totalSts);\n        }\n            \n    }, [context.neckBack, context]);\n\n    useEffect(() => {\n        let totalSts = context.totalSts;\n        let raglanSts = context.raglanSts;\n        if(totalSts > 0){\n            let divide = divSleeves ? divSleeves : DIVIDE_SLEEVE_COUNT;\n            // 소매 콧수 = 총 콧수 / DIVIDE_SLEEVE_COUNT - raglanSts\n            // 반올림\n            context.setSleevesSts(Math.round((totalSts / divide)) - raglanSts);\n        }\n\n    }, [context.totalSts, divSleeves, context.raglanSts, context]);\n\n    useEffect(() => {\n        let totalSts = context.totalSts;\n        let sleevesSts = context.sleevesSts;\n        let raglanSts = context.raglanSts;\n        if(totalSts > 0 && raglanSts > 0 && sleevesSts > 0) {\n            let back = totalSts - (sleevesSts * 2) - (raglanSts * 4);\n            // 뒷판 코수 = (소매 코수 * 2) - 2(양쪽 앞섶?) - (raglanSts * 4)\n            context.setBackSts(back);\n        }\n    }, [context.totalSts, context.setSleevesSts, context.raglanSts, context]);\n\n\n    const handleChangeNeckBack = e => {\n        context.setNeckBack(e.target.value);\n        context.setNeckBack(e.target.value);\n    }\n\n    const handleChangeRaglanSt = e => {\n        context.setRaglanSts(e.target.value);\n    }\n\n    const handleChangeSleeves = e => {\n        setdivSleeves(e.target.value);\n    }\n\n    const sizeInfo = [\n        {\n            label: \"뒷목 둘레\",\n            txtInfo: [\n                {\n                    id: \"neckBack\",\n                    txtLabel: \"뒷목 둘레를 입력하세요\",\n                    type: \"number\",\n                    required: true,\n                    onChange: handleChangeNeckBack,\n                    endAdornment: \"cm\",\n                }\n            ],\n        },\n        \n        {\n            label: \"래글런코\",\n            txtInfo: [\n                {\n                    id: \"raglanSt\",\n                    txtLabel: \"래글런코를 입력하세요\",\n                    type: \"number\",\n                    required: true,\n                    onChange: handleChangeRaglanSt,\n                    endAdornment: \"코\",\n                },\n            ],\n        },\n        {\n            label: \"소매 나눔 수\",\n            txtInfo: [\n                {\n                    id: \"sleeves\",\n                    txtLabel: \"소매 나눔 수를 입력하세요\",\n                    type: \"number\",\n                    required: true,\n                    onChange: handleChangeSleeves,\n                    \n                },\n            ],\n        },\n    ];\n\n    const resSts = [\n        {\n            label: \"총 콧수\",\n            results: [\n                {\n                    id: \"totalSt\",\n                    txtLabel: context.totalSts,\n                    onChange: null,\n                    endAdornment: \"코\",\n                    variant: \"filled\",\n                }\n            ]\n        },\n        {\n            label: \"소매 콧수\",\n            results: [\n                {\n                    id: \"sleevesSts\",\n                    txtLabel: context.sleevesSts,\n                    onChange: null,\n                    endAdornment: \"코\",\n                    variant: \"filled\",\n                }\n            ]\n        },\n        {\n            label: \"뒷판 콧수\",\n            results: [\n                {\n                    id: \"backSts\",\n                    txtLabel: context.backSts,\n                    onChange: null,\n                    endAdornment: \"코\",\n                    variant: \"filled\",\n                }\n            ]\n        },\n    ];\n    \n    return (\n        <React.Fragment>\n             <InfoTableContainer>\n                 {\n                     sizeInfo.map((info, idx) => (\n                        <TableForm key={idx} label={info.label} txtInfo={info.txtInfo} />\n                     ))\n                 }\n            </InfoTableContainer>\n\n            <InfoTableContainer>\n                {\n                    resSts.map((res, idx) => (\n                        <ResultForm key={idx} label={res.label} results={res.results} />\n                    ))\n                }\n            </InfoTableContainer>\n        </React.Fragment>\n        );\n}\n\n\nexport default SizeInfo;","import Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport { styled } from '@mui/material/styles';\n\nimport { BRAND_YOUTUBE, BRAND_INSTAGRAM, BRAND_RAVELRY, BRAND_ETSY } from '../utils/constants';\n\n// Create a Title component that'll render an <h1> tag with some styles\nexport const Title = styled(Typography)(\n  ({ color, size, align }) => `\n    font-size: ${ size ? size : \"1.5em\" };\n    text-align: ${ align ? align : \"center\" };\n    color: ${ color ? color : \"palevioletred\" };\n  `\n);\n\n\n// Create a Wrapper component that'll render a <section> tag with some styles\nexport const Wrapper = styled(Box)(\n  ({ bgcolor, padding }) => `\n  padding: ${padding? padding : \"4em\"};\n  background: ${bgcolor ? bgcolor: \"papayawhip\"};\n`,\n);\n\n\nconst linkStyle = {\n  fontSize: '1.5em',\n  padding: 5,\n};\n\nconst getBrandColor = brand => {\n  if (brand === BRAND_YOUTUBE) return \"#E62117\";\n  else if(brand === BRAND_INSTAGRAM) return \"#8a49a1\";\n  else if(brand === BRAND_RAVELRY) return \"#eb6357\";\n  else if(brand === BRAND_ETSY) return \"#eb6d20\";\n}\n\nexport const generateBrandStyles = (brand) => {\n  let brandColor = getBrandColor(brand);\n    return (\n        {\n          link: {\n          ...linkStyle,\n          '&:hover': {\n              fontSize: '2em',\n              color: brandColor,\n          },\n        }\n      }\n    );\n}","import React, { useContext } from 'react';\nimport InfoTableContainer from './InfoTableContainer';\nimport ResultForm from '../Components/ResultForm';\nimport { appContext } from './AppMain';\nimport TitleRow from './TitleRow';\n\nconst StartStitches = (props) => {\n    let context = useContext(appContext);\n    let raglanSts = context.raglanSts;\n    let sleevesSts = context.sleevesSts;\n    let backSts = context.backSts;\n    \n    const startInfo = {\n        results: [\n        {\n            id: \"front1\",\n            txtLabel: 1,\n            onChange: null,\n            // endAdornment: \"코\",\n            variant: \"filled\",\n        },\n        {\n            id: \"raglanSts1\",\n            txtLabel: raglanSts,\n            onChange: null,\n            // endAdornment: \"코\",\n            variant: \"filled\",\n        },\n        {\n            id: \"sleevesSts1\",\n            txtLabel: sleevesSts,\n            onChange: null,\n            // endAdornment: \"코\",\n            variant: \"filled\",\n        },\n        {\n            id: \"raglanSts2\",\n            txtLabel: raglanSts,\n            onChange: null,\n            // endAdornment: \"코\",\n            variant: \"filled\",\n        },\n        {\n            id: \"backSts\",\n            txtLabel: backSts,\n            onChange: null,\n            // endAdornment: \"코\",\n            variant: \"filled\",\n        },\n        {\n            id: \"raglanSts3\",\n            txtLabel: raglanSts,\n            onChange: null,\n            // endAdornment: \"코\",\n            variant: \"filled\",\n        },\n        {\n            id: \"sleevesSts2\",\n            txtLabel: sleevesSts,\n            onChange: null,\n            // endAdornment: \"코\",\n            variant: \"filled\",\n        },\n        {\n            id: \"fraglanSts4\",\n            txtLabel: raglanSts,\n            onChange: null,\n            // endAdornment: \"코\",\n            variant: \"filled\",\n        },\n        {\n            id: \"front2\",\n            txtLabel: 1,\n            onChange: null,\n            // endAdornment: \"코\",\n            variant: \"filled\",\n        },\n        ], \n    };\n\n    const rowTitles = [\"시작 코 수\"];\n    const rowTitles1 = [\"앞섶\", \"래글런\", \"소매\", \"래글런\", \"뒷판\", \"래글런\", \"소매\", \"래글런\", \"앞섶\"];\n    const startInfoLable = [1, raglanSts, sleevesSts, raglanSts, backSts, raglanSts, sleevesSts, raglanSts, 1];\n\n    return (\n        <React.Fragment>\n             <InfoTableContainer>\n                 <TitleRow titles={rowTitles} />\n                 <TitleRow titles={rowTitles1} />\n                 <TitleRow titles={startInfoLable} />\n                 {/* <ResultForm results={startInfo.results} /> */}\n            </InfoTableContainer>\n        </React.Fragment>\n        );\n}\n\nexport default StartStitches;","import React, { useEffect, useState } from 'react';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport BasicInfo from './BasicInfo';\nimport SwatchTable from './SwatchTable';\nimport SexInfo from './SexInfo';\nimport Box from '@mui/material/Box';\nimport SizeInfo from './SizeInifo';\nimport { CssBaseline, Grid, Link } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faYoutube, faInstagram, faRavelry, faEtsy } from '@fortawesome/free-brands-svg-icons'\nimport { BRAND_YOUTUBE, BRAND_INSTAGRAM, BRAND_RAVELRY, BRAND_ETSY } from '../utils/constants';\nimport { generateBrandStyles } from '../Styles/styles';\nimport StartStitches from './StartStitches';\n\n\nexport const appContext = React.createContext();\nappContext.displayName = '컨텍스트!!!!!';\nconst AppProvider = (props) => {\n    const [afterSts, setAfterSts] = useState(0); // 세탁후 스와치 코수\n    const [neckBack, setNeckBack] = useState(0); // 뒷목 둘레\n    const [totalSts, setTotalSts] = useState(0); // 총 코수\n    const [sleevesSts, setSleevesSts] = useState(0); // 소매 코수\n    const [backSts, setBackSts] = useState(0); // 뒷판 코수\n    const [raglanSts, setRaglanSts] = useState(2); // raglan\n\n    const contextValue = {afterSts, setAfterSts, neckBack, setNeckBack, totalSts, setTotalSts,\n        sleevesSts, setSleevesSts, backSts, setBackSts, raglanSts, setRaglanSts\n    };\n    return (\n        <appContext.Provider value={contextValue}>\n            {props.children}\n        </appContext.Provider>\n    );\n}\n\n\nconst MyLink = (props) => {\n    let brandStyles = generateBrandStyles(props.brand);\n    let styles = makeStyles(brandStyles)();\n\n    return (\n    <React.Fragment>\n        <Link className={styles.link} sx={{ color:'inherit' }}\n            target=\"_blank\" rel=\"noopener\" \n            href={props.href}\n        >\n            <FontAwesomeIcon icon={props.icon} />\n        </Link>{' '}\n    </React.Fragment>\n    );\n}\n\nconst Copyright = () => {\n    return (\n    <React.Fragment>\n    <Grid container flexdirection=\"column\" justify=\"center\" justifyContent=\"center\" spacing={1} alignItems=\"center\"\n        sx={{ flexGrow: 1 }}\n    >\n        <Grid item sm={12}>\n            <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n                {'Copyright © Fleur Sarang Crochet'}{' '}\n                {new Date().getFullYear()}\n                {'.'}\n            </Typography>\n        </Grid>\n\n        <Grid item sm={12}>\n            <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\"\n                sx={{}}\n            >\n                <MyLink href=\"https://www.youtube.com/c/FleurSarangCrochet\" icon={faYoutube} brand={BRAND_YOUTUBE} />\n                <MyLink href=\"https://www.instagram.com/fleursarang\" icon={faInstagram} brand={BRAND_INSTAGRAM} />\n                <MyLink href=\"https://www.ravelry.com/patterns/sources/fleurs-sarangs-ravelry-store\" icon={faRavelry} brand={BRAND_RAVELRY} />\n                <MyLink href=\"https://www.etsy.com/shop/FleurSarang\" icon={faEtsy} brand={BRAND_ETSY} />\n            </Typography>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n    );\n  }\n\nconst Header = () => (\n    <React.Fragment>\n    <Box sx={{ display: 'flex', justifyContent: 'flex-end', pb: '60px' }}>\n        <AppBar\n            position=\"absolute\"\n            color=\"default\"\n            elevation={0}\n            sx={{\n                position: 'relative',\n                borderBottom: (t) => `1px solid ${t.palette.divider}`,\n            }}\n        >\n            <Toolbar>\n                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                스티치 계산기\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    </Box>\n    </React.Fragment>\n)\n\n  const Footer = () => {\n      return (\n        <React.Fragment>\n        <Box sx={{ display: 'flex', justifyContent: 'flex-end', pt: '110px' }}>\n            <AppBar position=\"fixed\" \n                color=\"default\"\n                elevation={4}\n                sx={{ \n                    top: 'auto', \n                    bottom: 0,\n                    pt: '10px',\n                    pb: '30px',\n                    borderTop: (t) => `1px solid ${t.palette.divider}`,\n                }}>\n                <Toolbar>\n                    <Copyright />\n                </Toolbar>\n            </AppBar>\n        </Box>\n        </React.Fragment>\n      )\n  }\n\nconst AppMain = (props) => {\n\n    return (\n    <Box sx={{ flexGrow: 1, width: \"100vw\" }}>\n        <AppProvider>\n            <Header />\n            <Typography variant=\"h6\" color=\"inherit\" noWrap align=\"center\" \n                sx={{pt: 3}}\n            >\n                아직 실험 중입니다. 오류가 있으면 알려주세요. ^-^\n            </Typography>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap align=\"center\" \n                sx={{pb: 3}}\n            >\n                (fleursarang.crochet@gmail.com)\n            </Typography>\n            <Container component=\"main\" maxWidth=\"md\" sx={{ mb: 2 }} >\n                <BasicInfo />\n                <SwatchTable />\n                <SexInfo />\n                <SizeInfo />\n                <StartStitches />\n            </Container>\n        </AppProvider>\n        <CssBaseline />\n        <Footer />\n    </Box>\n    )\n}\n\nexport default AppMain;","\nimport React, { useEffect } from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport AppMain from './Containers/AppMain';\nimport { gaTrackingId, GTM_CONTAINER_ID } from './utils/gaConfig';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport TagManager from 'react-gtm-module';\n\nconst theme = createTheme();\n\n// const addGoogleAnalyticsScript = () => {\n//   return {\n//     _html: `window.dataLayer = windwo.dataLayer || [];\n//       function gtag(){dataLayer.push(arguments);}\n      \n//       gtag(‘js’, new Date());\n//       gtag(‘config’, ‘${gaTrackingId}’, {\n// \t      page_path: window.location.pathname,\n//       });`\n//       // __html: `\n//       //     window.dataLayer = window.dataLayer || [];\n//       //     function gtag(){dataLayer.push(arguments);}\n//       //     gtag('js', new Date());\n\n//       //     gtag('config', '${gaTrackingId}');\n//       //     page_path: window.location.pathname;\n//       // `,\n//   };\n// }\n\n\nconst tagManagerArgs = {\n  gtmId: GTM_CONTAINER_ID,\n};\n\nTagManager.initialize(tagManagerArgs);\nconst GaScript = () => (\n  <Helmet>\n      <title>{\"Fleur Sarang Crochet\"}</title>\n      {/*스크립트 추가*/}\n      {/* <script async src={`https://www.googletagmanager.com/gtag/js?id=${gaTrackingId}`}></script>\n      {/*위에서 생성한 html 추/}\n      <script\n          dangerouslySetInnerHTML={addGoogleAnalyticsScript()}\n      /> */}\n  </Helmet>\n);\n\n\nfunction App() {\n  // useEffect(() => {\n  //   const handleRouteChangeComplete = (url) => {\n  //       if(typeof window === 'object'){\n  //           const { title } = window.document;\n  //           const { href, pathname } = window.location;\n\n  //           window.gtag('config', gaTrackingId, {\n  //               page_title: title,\n  //               page_location: href,\n  //               page_path: pathname,\n  //           });\n  //       }\n  //   };\n  //   // Router.events.on('routeChangeComplete', handleRouteChangeComplete);\n\n  //   // return () => {\n  //   //     Router.events.off('routeChangeComplete', handleRouteChangeComplete);\n  //   // }\n  // });\n\n  return (\n    <HelmetProvider>\n      <ThemeProvider theme={theme}>\n        {/* <GaScript /> */}\n        <CssBaseline />\n        <AppMain />\n      </ThemeProvider>\n    </HelmetProvider>\n  );\n}\n\nexport default App;\n","// google analytics\nexport const gaTrackingId = \"G-LW1CK49GHY\";\nexport const GTM_CONTAINER_ID = \"GTM-PXTQNBK\";\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}