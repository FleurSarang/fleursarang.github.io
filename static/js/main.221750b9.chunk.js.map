{"version":3,"sources":["Components/TableForm.js","Containers/InfoTableContainer.js","Containers/BasicInfo.js","Components/ResultForm.js","Containers/SwatchTable.js","Containers/SexInfo.js","Containers/SizeInifo.js","utils/constants.js","Styles/styles.js","Containers/AppMain.js","App.js","reportWebVitals.js","index.js"],"names":["TableForm","props","label","txtInfo","feildLen","length","colSize","Fragment","Grid","container","spacing","padding","flexdirection","justify","justifyContent","alignItems","item","xs","sm","lg","Typography","color","align","sx","mt","fontSize","fontWeight","map","info","idx","variant","TextField","required","id","name","txtLabel","fullWidth","autoComplete","onChange","type","inputProps","inputMode","pattern","InputProps","endAdornment","InputAdornment","position","InfoTableContainer","Paper","my","md","p","children","BasicInfo","basicInfo","ResultForm","results","disabled","SwatchTable","context","useContext","appContext","useState","beforeSts","setBeforeSts","beforeRows","setBeforeRows","afterSts","setAfterSts","afterRows","setAfterRows","useEffect","setContractionSts","toFixed","setContractionRows","contractionSts","contractionRows","swatchInfo","e","target","value","SexInfo","sexInfo","SizeInfo","neckBack","setNeckBack","setReglanSt","sleeves","setSleeves","totalSts","setTotalSts","sleevesSts","setSleevesSts","sizeInfo","resSts","res","BRAND_YOUTUBE","BRAND_INSTAGRAM","BRAND_RAVELRY","BRAND_ETSY","linkStyle","styled","size","Box","bgcolor","generateBrandStyles","brand","brandColor","getBrandColor","link","React","createContext","displayName","AppProvider","contextValue","Provider","MyLink","brandStyles","styles","makeStyles","Link","className","rel","href","icon","Copyright","flexGrow","Date","getFullYear","faYoutube","faInstagram","faRavelry","faEtsy","Header","display","pb","AppBar","elevation","borderBottom","t","palette","divider","Toolbar","noWrap","Footer","pt","top","bottom","borderTop","AppMain","width","Container","component","maxWidth","mb","CssBaseline","theme","createTheme","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAmDeA,EA7CG,SAACC,GACf,MAAuCA,EAA/BC,aAAR,MAAgB,OAAhB,IAAuCD,EAAfE,eAAxB,MAAgC,GAAhC,EACIC,EAAWD,EAAQE,OACjBC,EAAUF,EAAW,EAAK,EAAIA,EAAY,EAEhD,OACI,cAAC,IAAMG,SAAP,UACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EACVC,QAAS,EAAGC,QAAS,EACrBC,cAAc,MAAMC,QAAQ,SAASC,eAAe,SACpDC,WAAW,UAHhB,UAKI,cAACP,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA7B,SACI,cAACC,EAAA,EAAD,CAAYC,MAAM,UAAUC,MAAM,SAC9BC,GAAI,CAAEC,GAAI,IAAKC,SAAU,MAAOC,WAAY,KADhD,SAEKxB,MAIRC,EAAQwB,KAAI,SAACC,EAAMC,GAChB,IAAIC,EAAUF,EAAKE,QAAUF,EAAKE,QAAU,WAC5C,OACA,cAACtB,EAAA,EAAD,CAAMQ,MAAI,EAAWC,GAAIX,EAASY,GAAIZ,EAAtC,SACI,cAACyB,EAAA,EAAD,CACIC,SAAUJ,EAAKI,SACfC,GAAIL,EAAKK,GACTC,KAAMN,EAAKK,GACX/B,MAAO0B,EAAKO,SACZC,WAAS,EACTC,aAAa,UACbP,QAASA,EACTQ,SAAUV,EAAKU,SACfC,KAAMX,EAAKW,KACXC,WAAY,CAAEC,UAAW,UAAWC,QAAS,UAC7CC,WAAe,CAAEC,aAAc,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SAAgClB,EAAKgB,mBAZ5Df,Y,SCdrBkB,EATY,SAAC9C,GAAD,OACvB,cAAC,IAAMM,SAAP,UACK,cAACyC,EAAA,EAAD,CAAOlB,QAAQ,WAAWP,GAAI,CAAE0B,GAAI,CAAEhC,GAAI,EAAGiC,GAAI,GAAKC,EAAG,GAAzD,SACIlD,EAAMmD,cC+BJC,EAjCG,SAACpD,GAEf,IAAMqD,EAAY,CACd,CACIpD,MAAO,sBACPC,QAAS,CAAC,CACN8B,GAAI,WACJE,SAAU,2DACVH,UAAU,KAGlB,CACI9B,MAAO,kCACPC,QAAS,CAAC,CACN8B,GAAI,aACJE,SAAU,uEACVH,UAAU,MAMtB,OACA,cAAC,IAAMzB,SAAP,UACK,eAAC,EAAD,WACG,cAAC,EAAD,CAAWL,MAAOoD,EAAU,GAAGpD,MAAOC,QAASmD,EAAU,GAAGnD,UAC5D,cAAC,EAAD,CAAWD,MAAOoD,EAAU,GAAGpD,MAAOC,QAASmD,EAAU,GAAGnD,gBCezDoD,EAzCI,SAACtD,GAChB,MAAsCA,EAA9BC,aAAR,MAAgB,OAAhB,IAAsCD,EAAduD,eAAxB,MAAgC,GAAhC,EACIpD,EAAWoD,EAAQnD,OACjBC,EAAUF,EAAW,EAAK,EAAIA,EAAY,EAEhD,OACI,cAAC,IAAMG,SAAP,UACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACG,cAAc,SAASC,QAAQ,SAASC,eAAe,SAASC,WAAW,UAAUL,QAAS,EAA9G,UACI,cAACF,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA7B,SACI,cAACC,EAAA,EAAD,CAAYC,MAAM,YAAYC,MAAM,SAChCC,GAAI,CAAEC,GAAI,IAAKC,SAAU,MAAOC,WAAY,KADhD,SAEKxB,MAIRsD,EAAQ7B,KAAI,SAACC,EAAMC,GAChB,IAAIC,EAAUF,EAAKE,QAAUF,EAAKE,QAAU,WAE5C,OACA,cAACtB,EAAA,EAAD,CAAMQ,MAAI,EAAWC,GAAIX,EAASY,GAAIZ,EAAtC,SACI,cAACyB,EAAA,EAAD,CACI0B,UAAQ,EACRpC,MAAM,OACNY,GAAIL,EAAKK,GACTC,KAAMN,EAAKK,GACX/B,MAAO0B,EAAKO,SAAWP,EAAKO,SAAW,GACvCL,QAASA,EACTQ,SAAUV,EAAKU,SAAWV,EAAKU,SAAW,KAC1CF,WAAS,EACTG,KAAMX,EAAKW,KACXC,WAAY,CAAEC,UAAW,UAAWC,QAAS,UAC7CC,WAAe,CAAEC,aAAc,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SAAgClB,EAAKgB,mBAZ5Df,YCmIrB6B,EAnJK,SAACzD,GACjB,IAAI0D,EAAUC,qBAAWC,GACzB,EAAkCC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAkCN,mBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WAEFR,EAAY,GAAKI,EAAW,GAE5BK,GADWT,EAAYI,EAAY,KACbM,QAAQ,MAEnC,CAACV,EAAWI,IAEfI,qBAAU,WAEHN,EAAa,GAAKI,EAAY,GAE7BK,GADWT,EAAaI,EAAa,KACdI,QAAQ,MAGpC,CAACR,EAAYI,IAEhB,MAA4CP,mBAAS,GAArD,mBAAOa,EAAP,KAAuBH,EAAvB,KACA,EAA8CV,mBAAS,GAAvD,mBAAOc,EAAP,KAAwBF,EAAxB,KAmBMG,EAAa,CACf,CACI3E,MAAO,sBACPC,QAAS,CACL,CACI8B,GAAI,YACJE,SAAU,uBACVI,KAAM,SACNP,UAAU,EACVM,SAzBmB,SAAAwC,GAC/Bd,EAAac,EAAEC,OAAOC,QAyBVpC,aAAc,UAElB,CACIX,GAAI,aACJE,SAAU,uBACVI,KAAM,SACNP,UAAU,EACVM,SA7Be,SAAAwC,GAC3BZ,EAAcY,EAAEC,OAAOC,QA6BXpC,aAAc,YAK1B,CACI1C,MAAO,sBACPC,QAAS,CACL,CACI8B,GAAI,WACJE,SAAU,uBACVI,KAAM,SACNP,UAAU,EACVM,SAxCkB,SAAAwC,GAC9BV,EAAYU,EAAEC,OAAOC,OACrBrB,EAAQS,YAAYU,EAAEC,OAAOC,QAuCjBpC,aAAc,UAElB,CACIX,GAAI,YACJE,SAAU,uBACVI,KAAM,SACNP,UAAU,EACVM,SA3Cc,SAAAwC,GAC1BR,EAAaQ,EAAEC,OAAOC,QA2CVpC,aAAc,aAOxBY,EAAU,CACZ,CACItD,MAAO,qBACPsD,QAAS,CACL,CACIvB,GAAI,SACJE,SAAS,GAAD,OAAKwC,EAAL,MACRrC,SAAU,KACVR,QAAS,UAEb,CACIG,GAAI,UACJE,SAAS,GAAD,OAAKyC,EAAL,MACRtC,SAAU,KACVR,QAAS,aAMzB,OACI,cAAC,IAAMvB,SAAP,UACK,eAAC,EAAD,WACG,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACG,cAAc,SAASC,QAAQ,SAASC,eAAe,SAASC,WAAW,UAAUL,QAAS,EAA9G,UACI,cAACF,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA7B,SACI,cAACC,EAAA,EAAD,CAAYC,MAAM,UAAUC,MAAM,SAASQ,QAAQ,KAC/CP,GAAI,CAAEC,GAAI,KADd,sBAKJ,cAAChB,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACI,cAACE,EAAA,EAAD,CAAYC,MAAM,UAAUC,MAAM,SAASQ,QAAQ,KAC/CP,GAAI,CAAEC,GAAI,KADd,6BAKJ,cAAChB,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACI,cAACE,EAAA,EAAD,CAAYC,MAAM,UAAUC,MAAM,SAASQ,QAAQ,KAC/CP,GAAI,CAAEC,GAAI,KADd,gCAQJqD,EAAWlD,KAAI,SAACC,EAAMC,GAAP,OACX,cAAC,EAAD,CAAqB3B,MAAO0B,EAAK1B,MAAOC,QAASyB,EAAKzB,SAAtC0B,MAGxB,cAAC,EAAD,CAAY3B,MAAOsD,EAAQ,GAAGtD,MAAOsD,QAASA,EAAQ,GAAGA,gBCzH1DyB,EAtBC,SAAChF,GAEb,IAAMiF,EAAU,CACZ,CACIhF,MAAO,eACPC,QAAS,CAAC,CACN8B,GAAI,UACJE,SAAU,wDAKtB,OACA,cAAC,IAAM5B,SAAP,UACK,cAAC,EAAD,UACG,cAAC,EAAD,CAAWL,MAAOgF,EAAQ,GAAGhF,MAAOC,QAAS+E,EAAQ,GAAG/E,e,SCsHrDgF,EArIE,SAAClF,GACd,MAAgC6D,mBAAS,GAAzC,mBAAOsB,EAAP,KAAiBC,EAAjB,KACA,EAAgCvB,mBAAS,GAAzC,mBAAiBwB,GAAjB,WACA,EAA8BxB,mBAAS,GAAvC,mBAAOyB,EAAP,KAAgBC,EAAhB,KACA,EAAgC1B,mBAAS,GAAzC,mBAAO2B,EAAP,KAAiBC,EAAjB,KACA,EAAoC5B,mBAAS,GAA7C,mBAAO6B,EAAP,KAAmBC,EAAnB,KACIjC,EAAUC,qBAAWC,GAEzBU,qBAAU,WACN,IAAIJ,EAAWR,EAAQQ,SAEvB,GAAGiB,EAAW,EAAE,CACZ,IAAIK,EAAWtB,GAAYiB,EAAW,IACtCM,EAAYD,GACZ9B,EAAQ+B,YAAYD,MAGzB,CAACL,EAAUzB,IAEdY,qBAAU,WAEHkB,EAAW,GAAKF,EAAU,GACzBK,GAAeH,EAAWF,GAASd,QAAQ,MAGhD,CAACgB,EAAUF,IAGd,IAaMM,EAAW,CACb,CACI3F,MAAO,4BACPC,QAAS,CACL,CACI8B,GAAI,WACJE,SAAU,iEACVI,KAAM,SACNP,UAAU,EACVM,SAtBa,SAAAwC,GACzBO,EAAYP,EAAEC,OAAOC,OACrBrB,EAAQ0B,YAAYP,EAAEC,OAAOC,QAqBjBpC,aAAc,QAK1B,CACI1C,MAAO,2BACPC,QAAS,CACL,CACI8B,GAAI,WACJE,SAAU,gEACVI,KAAM,SACNP,UAAU,EACVM,SA/Ba,SAAAwC,GACzBQ,EAAYR,EAAEC,OAAOC,QA+BTpC,aAAc,YAI1B,CACI1C,MAAO,mCACPC,QAAS,CACL,CACI8B,GAAI,UACJE,SAAU,wEACVI,KAAM,SACNP,UAAU,EACVM,SAxCY,SAAAwC,GACxBU,EAAWV,EAAEC,OAAOC,YA8ClBc,EAAS,CACX,CACI5F,MAAO,sBACPsD,QAAS,CACL,CACIvB,GAAI,UACJE,SAAUsD,EACVnD,SAAU,KACVM,aAAc,SACdd,QAAS,YAIrB,CACI5B,MAAO,4BACPsD,QAAS,CACL,CACIvB,GAAI,aACJE,SAAUwD,EACVrD,SAAU,KACVM,aAAc,SACdd,QAAS,aAMzB,OACI,eAAC,IAAMvB,SAAP,WACK,cAAC,EAAD,UAEQsF,EAASlE,KAAI,SAACC,EAAMC,GAAP,OACV,cAAC,EAAD,CAAqB3B,MAAO0B,EAAK1B,MAAOC,QAASyB,EAAKzB,SAAtC0B,QAK5B,cAAC,EAAD,UAEQiE,EAAOnE,KAAI,SAACoE,EAAKlE,GAAN,OACP,cAAC,EAAD,CAAsB3B,MAAO6F,EAAI7F,MAAOsD,QAASuC,EAAIvC,SAApC3B,Y,kCClI5BmE,EAAgB,UAChBC,EAAkB,YAClBC,EAAgB,WAChBC,EAAa,O,eCsBpBC,GAlBeC,YAAOjF,IAAPiF,EACnB,gBAAGhF,EAAH,EAAGA,MAAOiF,EAAV,EAAUA,KAAMhF,EAAhB,EAAgBA,MAAhB,iCACgBgF,GAAc,QAD9B,8BAEiBhF,GAAgB,SAFjC,yBAGYD,GAAgB,gBAH5B,YASqBgF,YAAOE,IAAPF,EACrB,gBAAGG,EAAH,EAAGA,QAAS7F,EAAZ,EAAYA,QAAZ,6BACWA,GAAmB,MAD9B,4BAEc6F,GAAmB,aAFjC,UAOgB,CAChB/E,SAAU,QACVd,QAAS,IAUE8F,EAAsB,SAACC,GAClC,IAAIC,EARgB,SAAAD,GACpB,OAAIA,IAAUV,EAAsB,UAC5BU,IAAUT,EAAwB,UAClCS,IAAUR,EAAsB,UAChCQ,IAAUP,EAAmB,eAAhC,EAIYS,CAAcF,GAC7B,MACI,CACEG,KAAK,2BACFT,GADC,IAEJ,UAAW,CACP3E,SAAU,MACVJ,MAAOsF,OC5BR9C,EAAaiD,IAAMC,gBAChClD,EAAWmD,YAAc,gCACzB,IAAMC,EAAc,SAAChH,GACjB,MAAgC6D,mBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAgCN,mBAAS,GAAzC,mBAAOsB,EAAP,KAAiBC,EAAjB,KACA,EAAgCvB,mBAAS,GAAzC,mBAEMoD,EAAe,CAAC/C,WAAUC,cAAagB,WAAUC,cAAaI,SAFpE,KAE8EC,YAF9E,MAGA,OACI,cAAC7B,EAAWsD,SAAZ,CAAqBnC,MAAOkC,EAA5B,SACKjH,EAAMmD,YAMbgE,EAAS,SAACnH,GACZ,IAAIoH,EAAcZ,EAAoBxG,EAAMyG,OACxCY,EAASC,YAAWF,EAAXE,GAEb,OACA,eAAC,IAAMhH,SAAP,WACI,cAACiH,EAAA,EAAD,CAAMC,UAAWH,EAAOT,KAAMtF,GAAI,CAAEF,MAAM,WACtC0D,OAAO,SAAS2C,IAAI,WACpBC,KAAM1H,EAAM0H,KAFhB,SAII,cAAC,IAAD,CAAiBC,KAAM3H,EAAM2H,SACzB,QAKVC,EAAY,WACd,OACA,cAAC,IAAMtH,SAAP,UACA,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACG,cAAc,SAASC,QAAQ,SAASC,eAAe,SAASJ,QAAS,EAAGK,WAAW,SACnGQ,GAAI,CAAEuG,SAAU,GADpB,UAGI,cAACtH,EAAA,EAAD,CAAMQ,MAAI,EAACE,GAAI,GAAf,SACI,eAACE,EAAA,EAAD,CAAYU,QAAQ,QAAQT,MAAM,iBAAiBC,MAAM,SAAzD,UACK,sCAAoC,KACpC,IAAIyG,MAAOC,cACX,SAIT,cAACxH,EAAA,EAAD,CAAMQ,MAAI,EAACE,GAAI,GAAf,SACI,eAACE,EAAA,EAAD,CAAYU,QAAQ,QAAQT,MAAM,iBAAiBC,MAAM,SACrDC,GAAI,GADR,UAGI,cAAC,EAAD,CAAQoG,KAAK,+CAA+CC,KAAMK,IAAWvB,MAAOV,IACpF,cAAC,EAAD,CAAQ2B,KAAK,wCAAwCC,KAAMM,IAAaxB,MAAOT,IAC/E,cAAC,EAAD,CAAQ0B,KAAK,wEAAwEC,KAAMO,IAAWzB,MAAOR,IAC7G,cAAC,EAAD,CAAQyB,KAAK,wCAAwCC,KAAMQ,IAAQ1B,MAAOP,eAQpFkC,EAAS,kBACX,cAAC,IAAM9H,SAAP,UACA,cAACgG,EAAA,EAAD,CAAKhF,GAAI,CAAE+G,QAAS,OAAQxH,eAAgB,WAAYyH,GAAI,QAA5D,SACI,cAACC,EAAA,EAAD,CACI1F,SAAS,WACTzB,MAAM,UACNoH,UAAW,EACXlH,GAAI,CACAuB,SAAU,QACV4F,aAAc,SAACC,GAAD,0BAAoBA,EAAEC,QAAQC,WANpD,SASI,cAACC,EAAA,EAAD,UACI,cAAC1H,EAAA,EAAD,CAAYU,QAAQ,KAAKT,MAAM,UAAU0H,QAAM,EAA/C,4DASRC,EAAS,WACX,OACE,cAAC,IAAMzI,SAAP,UACA,cAACgG,EAAA,EAAD,CAAKhF,GAAI,CAAE+G,QAAS,OAAQxH,eAAgB,WAAYmI,GAAI,SAA5D,SACI,cAACT,EAAA,EAAD,CAAQ1F,SAAS,QACbzB,MAAM,UACNoH,UAAW,EACXlH,GAAI,CACA2H,IAAK,OACLC,OAAQ,EACRZ,GAAI,OACJa,UAAW,SAACT,GAAD,0BAAoBA,EAAEC,QAAQC,WAPjD,SASI,cAACC,EAAA,EAAD,UACI,cAAC,EAAD,aA4BLO,EAlBC,SAACpJ,GACb,OACA,eAACsG,EAAA,EAAD,CAAKhF,GAAI,CAAEuG,SAAU,EAAGwB,MAAO,SAA/B,UACI,eAAC,EAAD,WACI,cAAC,EAAD,IACA,eAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAAKlI,GAAI,CAAEmI,GAAI,GAApD,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UAGR,cAACC,EAAA,EAAD,IACA,cAAC,EAAD,QCnIFC,EAAQC,cAWCC,MATf,WACE,OACE,eAACC,EAAA,EAAD,CAAeH,MAAOA,EAAtB,UACE,cAACD,EAAA,EAAD,IACA,cAAC,EAAD,QCASK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.221750b9.chunk.js","sourcesContent":["import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport { InputAdornment } from '@mui/material';\n\nconst TableForm = (props) => {\n    const { label = \"none\", txtInfo=[] } = props;\n    let feildLen = txtInfo.length;\n    const colSize = feildLen > 1 ? (8 / feildLen) : 8;\n    \n    return (\n        <React.Fragment>\n            <Grid container \n                 spacing={1} padding={0} \n                 flexdirection=\"row\" justify=\"center\" justifyContent=\"center\" \n                 alignItems=\"ceneter\">\n                \n                <Grid item xs={3} sm={3} lg={3}>\n                    <Typography color=\"primary\" align=\"center\" \n                        sx={{ mt: 2.3, fontSize: \"1em\", fontWeight: 500}} >\n                        {label}\n                    </Typography>\n                </Grid>\n\n                {txtInfo.map((info, idx) => {\n                    let variant = info.variant ? info.variant : \"standard\";\n                    return  (\n                    <Grid item key={idx} xs={colSize} sm={colSize}>\n                        <TextField\n                            required={info.required}\n                            id={info.id}\n                            name={info.id}\n                            label={info.txtLabel}\n                            fullWidth\n                            autoComplete=\"no info\"\n                            variant={variant}\n                            onChange={info.onChange}\n                            type={info.type}\n                            inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }}\n                            InputProps = { { endAdornment: <InputAdornment position=\"end\">{info.endAdornment}</InputAdornment> } }\n                        />\n                    </Grid>\n                    )}\n                    \n                )}\n            </Grid>\n        </React.Fragment>\n        );\n    }\n\nexport default TableForm;","import React from 'react';\nimport Paper from '@mui/material/Paper';\n\n\n\nconst InfoTableContainer = (props) => (\n    <React.Fragment>\n         <Paper variant=\"outlined\" sx={{ my: { xs: 2, md: 3 }, p: 0 }}>\n            {props.children}\n        </Paper>\n    </React.Fragment>\n);\n\n\nexport default InfoTableContainer;","import React from 'react';\nimport TableForm from '../Components/TableForm';\nimport InfoTableContainer from './InfoTableContainer';\n\n\n\nconst BasicInfo = (props) => {\n\n    const basicInfo = [\n        {\n            label: \"실 정보\",\n            txtInfo: [{\n                id: \"yarnInfo\",\n                txtLabel: \"실 정보를 입력하세요\",\n                required: false,\n            }],\n        },\n        {\n            label: \"바늘 사이즈\",\n            txtInfo: [{\n                id: \"needleSize\",\n                txtLabel: \"바늘 사이즈를 입력하세요\",\n                required: false,\n                },\n            ],\n        },\n    ];\n    \n    return (\n    <React.Fragment>\n         <InfoTableContainer>\n            <TableForm label={basicInfo[0].label} txtInfo={basicInfo[0].txtInfo} />\n            <TableForm label={basicInfo[1].label} txtInfo={basicInfo[1].txtInfo} />\n        </InfoTableContainer>\n    </React.Fragment>\n    );\n}\n\n\nexport default BasicInfo;","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport { InputAdornment } from '@mui/material';\n\nconst ResultForm = (props) => {\n    const { label = \"none\", results=[]} = props;\n    let feildLen = results.length;\n    const colSize = feildLen > 1 ? (8 / feildLen) : 8;\n    \n    return (\n        <React.Fragment>\n            <Grid container flexdirection=\"column\" justify=\"center\" justifyContent=\"center\" alignItems=\"ceneter\" spacing={2}>\n                <Grid item xs={3} sm={3} lg={3}>\n                    <Typography color=\"secondary\" align=\"center\" \n                        sx={{ mt: 2.3, fontSize: \"1em\", fontWeight: 500}} >\n                        {label}\n                    </Typography>\n                </Grid>\n\n                {results.map((info, idx) => {\n                    let variant = info.variant ? info.variant : \"standard\";\n                    \n                    return(\n                    <Grid item key={idx} xs={colSize} sm={colSize}>\n                        <TextField\n                            disabled\n                            color=\"info\"\n                            id={info.id}\n                            name={info.id}\n                            label={info.txtLabel ? info.txtLabel : \"\"}\n                            variant={variant}\n                            onChange={info.onChange ? info.onChange : null}\n                            fullWidth\n                            type={info.type}\n                            inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }}\n                            InputProps = { { endAdornment: <InputAdornment position=\"end\">{info.endAdornment}</InputAdornment> } }\n                        />\n                    </Grid>\n                    );\n                })}\n            </Grid>\n        </React.Fragment>\n        );\n    }\n\nexport default ResultForm;","import React, { useContext, useEffect, useState } from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport TableForm from '../Components/TableForm';\nimport InfoTableContainer from './InfoTableContainer';\nimport ResultForm from '../Components/ResultForm';\nimport { appContext } from './AppMain';\n\n\nconst SwatchTable = (props) => {\n    let context = useContext(appContext);\n    const [beforeSts, setBeforeSts] = useState(0);\n    const [beforeRows, setBeforeRows] = useState(0);\n    const [afterSts, setAfterSts] = useState(0);\n    const [afterRows, setAfterRows] = useState(0);\n\n    useEffect(() => {\n        // 수축률 = 세탁 전 / 세탁 후 * 100\n        if (beforeSts > 0 && afterSts > 0) {\n            let res = (beforeSts / afterSts) * 100;\n            setContractionSts(res.toFixed(2));\n        }\n    }, [beforeSts, afterSts]);\n\n    useEffect(() => {\n        // 수축률 = 세탁 전 / 세탁 후 * 100\n        if(beforeRows > 0 && afterRows > 0) {\n            let res = (beforeRows / afterRows) * 100;\n            setContractionRows(res.toFixed(2));\n        }\n\n    }, [beforeRows, afterRows]);\n\n    const [contractionSts, setContractionSts] = useState(0);\n    const [contractionRows, setContractionRows] = useState(0);\n    \n\n    const handleChangeBeforeStitches = e => {\n        setBeforeSts(e.target.value);\n    }\n\n    const handleChangeBeforeRows = e => {\n        setBeforeRows(e.target.value);\n    }\n    const handleChangeAfterStitches = e => {\n        setAfterSts(e.target.value);\n        context.setAfterSts(e.target.value);\n    }\n\n    const handleChangeAfterRows = e => {\n        setAfterRows(e.target.value);\n    }\n\n    const swatchInfo = [\n        {\n            label: \"세탁 전\",\n            txtInfo: [\n                {\n                    id: \"beforeSts\",\n                    txtLabel: \"(숫자만)\",\n                    type: \"number\",\n                    required: true,\n                    onChange: handleChangeBeforeStitches,\n                    endAdornment: \"코\",\n                },\n                {\n                    id: \"beforeRows\",\n                    txtLabel: \"(숫자만)\",\n                    type: \"number\",\n                    required: true,\n                    onChange: handleChangeBeforeRows,\n                    endAdornment: \"단\",\n                }\n            ],\n        },\n        \n        {\n            label: \"세탁 후\",\n            txtInfo: [\n                {\n                    id: \"afterSts\",\n                    txtLabel: \"(숫자만)\",\n                    type: \"number\",\n                    required: true,\n                    onChange: handleChangeAfterStitches,\n                    endAdornment: \"코\",\n                },\n                {\n                    id: \"afterRows\",\n                    txtLabel: \"(숫자만)\",\n                    type: \"number\",\n                    required: true,\n                    onChange: handleChangeAfterRows,\n                    endAdornment: \"단\",\n                }\n            ],\n        },\n    ];\n\n\n    const results = [\n        {\n            label: \"수축률\",\n            results: [\n                {\n                    id: \"resSts\",\n                    txtLabel: `${contractionSts} %`,\n                    onChange: null,\n                    variant: \"filled\",\n                },\n                {\n                    id: \"resRows\",\n                    txtLabel: `${contractionRows} %`,\n                    onChange: null,\n                    variant: \"filled\",\n                }\n            ],\n        },\n    ];\n\n    return (\n        <React.Fragment>\n             <InfoTableContainer>\n                <Grid container flexdirection=\"column\" justify=\"center\" justifyContent=\"center\" alignItems=\"ceneter\" spacing={2}>\n                    <Grid item xs={2} sm={2} lg={2}>\n                        <Typography color=\"primary\" align=\"center\" variant=\"h6\" \n                            sx={{ mt: 2.3 }} >\n                            Swatch\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={4} sm={4}>\n                        <Typography color=\"primary\" align=\"center\" variant=\"h6\" \n                            sx={{ mt: 2.3 }} >\n                            코 수\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={4} sm={4} >\n                        <Typography color=\"primary\" align=\"center\" variant=\"h6\" \n                            sx={{ mt: 2.3 }} >\n                            단 수\n                        </Typography>\n                    </Grid>\n                </Grid>\n\n                {\n                    swatchInfo.map((info, idx) => (\n                        <TableForm key={idx} label={info.label} txtInfo={info.txtInfo} />\n                    ))\n                 }\n                <ResultForm label={results[0].label} results={results[0].results} />\n            </InfoTableContainer>\n        </React.Fragment>\n        );\n}\n\n\nexport default SwatchTable;","import React from 'react';\nimport TableForm from '../Components/TableForm';\nimport InfoTableContainer from './InfoTableContainer';\n\n\n\nconst SexInfo = (props) => {\n\n    const sexInfo = [\n        {\n            label: \"성별\",\n            txtInfo: [{\n                id: \"sexInfo\",\n                txtLabel: \"성별을 입력하세요\",\n            }],\n        },\n    ];\n    \n    return (\n    <React.Fragment>\n         <InfoTableContainer>\n            <TableForm label={sexInfo[0].label} txtInfo={sexInfo[0].txtInfo} />\n        </InfoTableContainer>\n    </React.Fragment>\n    );\n}\n\n\nexport default SexInfo;","import React, { useContext, useEffect, useState } from 'react';\nimport TableForm from '../Components/TableForm';\nimport InfoTableContainer from './InfoTableContainer';\nimport ResultForm from '../Components/ResultForm';\nimport { appContext } from './AppMain';\n\nconst SizeInfo = (props) => {\n    const [neckBack, setNeckBack] = useState(0);\n    const [reglanSt, setReglanSt] = useState(0);\n    const [sleeves, setSleeves] = useState(0); // 소매 나눔 수\n    const [totalSts, setTotalSts] = useState(0); // 총 콧 수\n    const [sleevesSts, setSleevesSts] = useState(0); // 소매 코수\n    let context = useContext(appContext);\n\n    useEffect(() => {\n        let afterSts = context.afterSts;\n        // 총 콧수 = 세탁후 코수 * (뒷목 둘레 /10)\n        if(neckBack > 0){\n            let totalSts = afterSts * (neckBack / 10);\n            setTotalSts(totalSts);\n            context.setTotalSts(totalSts);\n        }\n            \n    }, [neckBack, context]);\n\n    useEffect(() => {\n        // 소매 콧수 = 총 콧수 / 소매 나눔 수\n        if(totalSts > 0 && sleeves > 0){\n            setSleevesSts((totalSts / sleeves).toFixed(2));\n        }\n\n    }, [totalSts, sleeves]);\n\n\n    const handleChangeNeckBack = e => {\n        setNeckBack(e.target.value);\n        context.setNeckBack(e.target.value);\n    }\n\n    const handleChangeReglanSt = e => {\n        setReglanSt(e.target.value);\n    }\n\n    const handleChangeSleeves = e => {\n        setSleeves(e.target.value);\n    }\n\n    const sizeInfo = [\n        {\n            label: \"뒷목 둘레\",\n            txtInfo: [\n                {\n                    id: \"neckBack\",\n                    txtLabel: \"뒷목 둘레를 입력하세요\",\n                    type: \"number\",\n                    required: true,\n                    onChange: handleChangeNeckBack,\n                    endAdornment: \"cm\",\n                }\n            ],\n        },\n        \n        {\n            label: \"레글런코\",\n            txtInfo: [\n                {\n                    id: \"reglanSt\",\n                    txtLabel: \"레글런코를 입력하세요\",\n                    type: \"number\",\n                    required: true,\n                    onChange: handleChangeReglanSt,\n                    endAdornment: \"코\",\n                },\n            ],\n        },\n        {\n            label: \"소매 나눔 수\",\n            txtInfo: [\n                {\n                    id: \"sleeves\",\n                    txtLabel: \"소매 나눔 수를 입력하세요\",\n                    type: \"number\",\n                    required: true,\n                    onChange: handleChangeSleeves,\n                    \n                },\n            ],\n        },\n    ];\n\n    const resSts = [\n        {\n            label: \"총 콧수\",\n            results: [\n                {\n                    id: \"totalSt\",\n                    txtLabel: totalSts,\n                    onChange: null,\n                    endAdornment: \"코\",\n                    variant: \"filled\",\n                }\n            ]\n        },\n        {\n            label: \"소매 콧수\",\n            results: [\n                {\n                    id: \"sleevesSts\",\n                    txtLabel: sleevesSts,\n                    onChange: null,\n                    endAdornment: \"코\",\n                    variant: \"filled\",\n                }\n            ]\n        },\n    ];\n    \n    return (\n        <React.Fragment>\n             <InfoTableContainer>\n                 {\n                     sizeInfo.map((info, idx) => (\n                        <TableForm key={idx} label={info.label} txtInfo={info.txtInfo} />\n                     ))\n                 }\n            </InfoTableContainer>\n\n            <InfoTableContainer>\n                {\n                    resSts.map((res, idx) => (\n                        <ResultForm key={idx} label={res.label} results={res.results} />\n                    ))\n                }\n            </InfoTableContainer>\n        </React.Fragment>\n        );\n}\n\n\nexport default SizeInfo;","export const BRAND_YOUTUBE = \"YOUTUBE\";\nexport const BRAND_INSTAGRAM = \"INSTAGRAM\";\nexport const BRAND_RAVELRY = \"RAVELLRY\";\nexport const BRAND_ETSY = \"ETSY\";","import Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport { styled } from '@mui/material/styles';\n\nimport { BRAND_YOUTUBE, BRAND_INSTAGRAM, BRAND_RAVELRY, BRAND_ETSY } from '../utils/constants';\n\n// Create a Title component that'll render an <h1> tag with some styles\nexport const Title = styled(Typography)(\n  ({ color, size, align }) => `\n    font-size: ${ size ? size : \"1.5em\" };\n    text-align: ${ align ? align : \"center\" };\n    color: ${ color ? color : \"palevioletred\" };\n  `\n);\n\n\n// Create a Wrapper component that'll render a <section> tag with some styles\nexport const Wrapper = styled(Box)(\n  ({ bgcolor, padding }) => `\n  padding: ${padding? padding : \"4em\"};\n  background: ${bgcolor ? bgcolor: \"papayawhip\"};\n`,\n);\n\n\nconst linkStyle = {\n  fontSize: '1.5em',\n  padding: 5,\n};\n\nconst getBrandColor = brand => {\n  if (brand === BRAND_YOUTUBE) return \"#E62117\";\n  else if(brand === BRAND_INSTAGRAM) return \"#8a49a1\";\n  else if(brand === BRAND_RAVELRY) return \"#eb6357\";\n  else if(brand === BRAND_ETSY) return \"#eb6d20\";\n}\n\nexport const generateBrandStyles = (brand) => {\n  let brandColor = getBrandColor(brand);\n    return (\n        {\n          link: {\n          ...linkStyle,\n          '&:hover': {\n              fontSize: '2em',\n              color: brandColor,\n          },\n        }\n      }\n    );\n}","import React, { useState } from 'react';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport BasicInfo from './BasicInfo';\nimport SwatchTable from './SwatchTable';\nimport SexInfo from './SexInfo';\nimport Box from '@mui/material/Box';\nimport SizeInfo from './SizeInifo';\nimport { CssBaseline, Grid, Link } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faYoutube, faInstagram, faRavelry, faEtsy } from '@fortawesome/free-brands-svg-icons'\nimport { BRAND_YOUTUBE, BRAND_INSTAGRAM, BRAND_RAVELRY, BRAND_ETSY } from '../utils/constants';\nimport { generateBrandStyles } from '../Styles/styles';\n\nexport const appContext = React.createContext();\nappContext.displayName = '컨텍스트!!!!!';\nconst AppProvider = (props) => {\n    const [afterSts, setAfterSts] = useState(0);\n    const [neckBack, setNeckBack] = useState(0);\n    const [totalSts, setTotalSts] = useState(0);\n\n    const contextValue = {afterSts, setAfterSts, neckBack, setNeckBack, totalSts, setTotalSts};\n    return (\n        <appContext.Provider value={contextValue}>\n            {props.children}\n        </appContext.Provider>\n    );\n}\n\n\nconst MyLink = (props) => {\n    let brandStyles = generateBrandStyles(props.brand);\n    let styles = makeStyles(brandStyles)();\n\n    return (\n    <React.Fragment>\n        <Link className={styles.link} sx={{ color:'inherit' }}\n            target=\"_blank\" rel=\"noopener\" \n            href={props.href}\n        >\n            <FontAwesomeIcon icon={props.icon} />\n        </Link>{' '}\n    </React.Fragment>\n    );\n}\n\nconst Copyright = () => {\n    return (\n    <React.Fragment>\n    <Grid container flexdirection=\"column\" justify=\"center\" justifyContent=\"center\" spacing={1} alignItems=\"center\"\n        sx={{ flexGrow: 1 }}\n    >\n        <Grid item sm={12}>\n            <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n                {'Copyright © Fleur Sarang Crochet'}{' '}\n                {new Date().getFullYear()}\n                {'.'}\n            </Typography>\n        </Grid>\n\n        <Grid item sm={12}>\n            <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\"\n                sx={{}}\n            >\n                <MyLink href=\"https://www.youtube.com/c/FleurSarangCrochet\" icon={faYoutube} brand={BRAND_YOUTUBE} />\n                <MyLink href=\"https://www.instagram.com/fleursarang\" icon={faInstagram} brand={BRAND_INSTAGRAM} />\n                <MyLink href=\"https://www.ravelry.com/patterns/sources/fleurs-sarangs-ravelry-store\" icon={faRavelry} brand={BRAND_RAVELRY} />\n                <MyLink href=\"https://www.etsy.com/shop/FleurSarang\" icon={faEtsy} brand={BRAND_ETSY} />\n            </Typography>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n    );\n  }\n\nconst Header = () => (\n    <React.Fragment>\n    <Box sx={{ display: 'flex', justifyContent: 'flex-end', pb: '60px' }}>\n        <AppBar\n            position=\"absolute\"\n            color=\"default\"\n            elevation={0}\n            sx={{\n                position: 'fixed',\n                borderBottom: (t) => `1px solid ${t.palette.divider}`,\n            }}\n        >\n            <Toolbar>\n                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                스티치 계산기\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    </Box>\n    </React.Fragment>\n)\n\n  const Footer = () => {\n      return (\n        <React.Fragment>\n        <Box sx={{ display: 'flex', justifyContent: 'flex-end', pt: '100px' }}>\n            <AppBar position=\"fixed\" \n                color=\"default\"\n                elevation={4}\n                sx={{ \n                    top: 'auto', \n                    bottom: 0,\n                    pb: '30px',\n                    borderTop: (t) => `1px solid ${t.palette.divider}`,\n                }}>\n                <Toolbar>\n                    <Copyright />\n                </Toolbar>\n            </AppBar>\n        </Box>\n        </React.Fragment>\n      )\n  }\n\n\n\nconst AppMain = (props) => {\n    return (\n    <Box sx={{ flexGrow: 1, width: \"100vw\" }}>\n        <AppProvider>\n            <Header />\n            <Container component=\"main\" maxWidth=\"md\" sx={{ mb: 2 }} >\n                <BasicInfo />\n                <SwatchTable />\n                <SexInfo />\n                <SizeInfo />\n            </Container>\n        </AppProvider>\n        <CssBaseline />\n        <Footer />\n    </Box>\n    )\n}\n\nexport default AppMain;","\nimport React from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport AppMain from './Containers/AppMain';\n\nconst theme = createTheme();\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppMain />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}