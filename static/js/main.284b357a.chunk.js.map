{"version":3,"sources":["utils/constants.js","Styles/styles.js","Components/TableForm.js","Containers/InfoTableContainer.js","Containers/BasicInfo.js","Components/BasicTable.js","Containers/SwatchTable.js","Containers/SexInfo.js","Containers/SizeInifo.js","Containers/StartStitches.js","Containers/SleevesInfo.js","utils/utils.js","Containers/AppMain.js","App.js","utils/gaConfig.js","reportWebVitals.js","index.js"],"names":["BRAND_YOUTUBE","BRAND_INSTAGRAM","BRAND_RAVELRY","BRAND_ETSY","COLOR_PRIMARY_MAIN","RADIO_SEX_FEMAILE","RADIO_SEX_MAILE","linkStyle","styled","Typography","color","size","align","Box","bgcolor","padding","fontSize","generateBrandStyles","brand","brandColor","getBrandColor","link","radioButtonStyle","disabled","infoHighLightStyle","basicTableStyle","p","borderRadius","textAlign","fontWeight","labelStyle","mt","TableForm","props","label","txtInfo","feildLen","length","colSize","labelColSize","Fragment","Grid","container","spacing","flexdirection","justify","justifyContent","alignItems","item","xs","sm","lg","sx","map","info","idx","variant","id","txtLabel","onChange","type","value","InputProps","others","pb","TextField","name","fullWidth","autoComplete","onFocus","e","target","select","endAdornment","InputAdornment","position","inputMode","pattern","inputProps","style","InfoTableContainer","Paper","my","md","flex","children","BasicInfo","required","BasicTable","printDirection","items","repeat","gridTemplateColumns","display","columnGap","rowGap","SwatchTable","context","useContext","appContext","useState","contractionSts","setContractionSts","contractionRows","setContractionRows","useEffect","beforeSts","afterSts","toFixed","beforeRows","afterRows","swatchInfo","setBeforeSts","setBeforeRows","setAfterSts","setAfterRows","results","data","res","SexInfo","sexInfo","FormControlLabel","control","Radio","selectedSex","RadioGroup","row","setSelectedSex","placeSelf","SizeInfo","divSleeves","setdivSleeves","neckBack","totalSts","Math","round","setTotalSts","raglanSts","setSleeveStartSts","sleeveStartSts","frontStartSt","back","setBackStartSts","sizeInfo","setNeckBack","setRaglanSts","StartStitches","backStartSts","startInfos","bg","RADIO_DESIRED_LENGTH","RADIO_DESIRED_ROWS","RADIO_WRIST_SIZE","RADIO_WRIST_STITCHES","SleevesInfo","selectedDesiredValue","setSelectDesiredValue","selectedWristValue","setSelectedWristValue","sleeveDecreaseCount","setSleeveDecreaseCount","sleeveDecreaseRowCount","setSleeveDecreaseRowCount","rows","sts","setFbEqualSts","setFbEqualRows","fbEqualSts","fbEqualRows","desiredRaglanLength","desiredRaglanRows","lengthPerRow","rowPerCm","currLength","setDesiredRaglanRows","setDesiredRaglanLength","sleeve","setSleeveSeperateSts","setSleeveTotalSts","bwlCastOn","sleeveRowCount","sleeveLength","setSleeveRowCount","wristSize","wristSts","setWristSts","setWristSize","decreaseCount","floor","sleeveTotalSts","sleeveTotalStsext","fbInfos","printDrection","headers","fbHeader","sleeves","moreInfos","Number","sleevesInfos","sleeveSeperateSts","console","log","setBwlCastOn","setSleeveLength","wristInfos","sleeveDecreaseInfo","prindDirection","React","createContext","displayName","AppProvider","setFrontStartSt","contextValue","Provider","MyLink","brandStyles","styles","makeStyles","Link","className","rel","href","icon","Copyright","flexGrow","Date","getFullYear","faYoutube","faInstagram","faRavelry","faEtsy","Header","AppBar","elevation","borderBottom","t","palette","divider","Toolbar","noWrap","Footer","pt","top","bottom","borderTop","AppMain","Container","component","maxWidth","mb","CssBaseline","theme","createTheme","tagManagerArgs","gtmId","TagManager","initialize","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.284b357a.chunk.js","sourcesContent":["export const SITE_NAME = \"Fleur Sarang Crochet\";\nexport const BRAND_YOUTUBE = \"YOUTUBE\";\nexport const BRAND_INSTAGRAM = \"INSTAGRAM\";\nexport const BRAND_RAVELRY = \"RAVELLRY\";\nexport const BRAND_ETSY = \"ETSY\";\nexport const DIVIDE_SLEEVE_COUNT = 7;\n\nexport const COLOR_PRIMARY_MAIN = \"#f06292\";\nexport const COLOR_PRIMARY_DARK = \"#a84466\";\nexport const COLOR_PRIMARY_LIGHT2 = \"#f381a7\";\nexport const COLOR_PRIMARY_LIGHT = \"#fce4ec\";\nexport const COLOR_WHITE = \"white\";\nexport const COLOR_GRAY = \"#f5f5f5\";\nexport const COLOR_DARK_GRAY = \"#bdbdbd\";\n\nexport const RADIO_SEX_FEMAILE = \"female\";\nexport const RADIO_SEX_MAILE = \"maile\";","import Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport { styled } from '@mui/material/styles';\nimport { BRAND_YOUTUBE, BRAND_INSTAGRAM, BRAND_RAVELRY, BRAND_ETSY, COLOR_GRAY, COLOR_DARK_GRAY, COLOR_PRIMARY_MAIN } from '../utils/constants';\n\n// Create a Title component that'll render an <h1> tag with some styles\nexport const Title = styled(Typography)(\n  ({ color, size, align }) => `\n    font-size: ${ size ? size : \"1.5em\" };\n    text-align: ${ align ? align : \"center\" };\n    color: ${ color ? color : \"palevioletred\" };\n  `\n);\n\n\n// Create a Wrapper component that'll render a <section> tag with some styles\nexport const Wrapper = styled(Box)(\n  ({ bgcolor, padding }) => `\n  padding: ${padding? padding : \"4em\"};\n  background: ${bgcolor ? bgcolor: \"papayawhip\"};\n`,\n);\n\n\nconst linkStyle = {\n  fontSize: \"1.5em\",\n  padding: 5,\n};\n\n\nconst getBrandColor = brand => {\n  if (brand === BRAND_YOUTUBE) return \"#E62117\";\n  else if(brand === BRAND_INSTAGRAM) return \"#8a49a1\";\n  else if(brand === BRAND_RAVELRY) return \"#eb6357\";\n  else if(brand === BRAND_ETSY) return \"#eb6d20\";\n};\n\nexport const generateBrandStyles = (brand) => {\n  let brandColor = getBrandColor(brand);\n    return (\n        {\n          link: {\n          ...linkStyle,\n          '&:hover': {\n              fontSize: '2em',\n              color: brandColor,\n          },\n        }\n      }\n    );\n};\n\n\nexport const radioButtonStyle = (disabled) => {\n  return {\n    fontSize: \"0.9em\",\n    '& .MuiSvgIcon-root': {\n      fontSize:\"0.9em\",\n    },\n    color: disabled ? COLOR_DARK_GRAY : \"primary\",\n  }\n};\n\nexport const infoHighLightStyle = {\n  bgcolor: COLOR_GRAY,\n  color: COLOR_PRIMARY_MAIN,\n};\n\nexport const basicTableStyle = {\n  p: 1,\n  borderRadius: 1,\n  textAlign: 'center',\n  fontSize: '1em',\n  fontWeight: '700',\n};\n\nexport const labelStyle = {\n  mt: 2.3, \n  fontSize: \"0.9em\", \n  fontWeight: 700,\n};\n\nexport const titleRowStyles = {\n  main: {\n    m: 2, \n    fontSize: \"1em\", \n    fontWeight: 500.\n  }\n}\n\n\n// export const bgColor = {\n//   bgcolor: 'primary.light',\n//   color: 'white',\n// };","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport { InputAdornment } from '@mui/material';\nimport { labelStyle } from '../Styles/styles';\n\nconst TableForm = (props) => {\n    const { label = \"none\", txtInfo=[] } = props;\n    let feildLen = txtInfo.length;\n    const colSize = feildLen > 1 ? (8 / feildLen) : 8;\n    let labelColSize = txtInfo ? 3 : 12;\n    \n    return (\n        <React.Fragment>\n            <Grid container \n                 spacing={2} padding={0} \n                 flexdirection=\"row\" justify=\"center\" justifyContent=\"center\" \n                 alignItems=\"ceneter\">\n                \n                <Grid item xs={labelColSize} sm={labelColSize} lg={labelColSize}>\n                    <Typography align=\"left\" \n                        sx={{...labelStyle}} >\n                        {label}\n                    </Typography>\n                </Grid>\n\n                {txtInfo.map((info, idx) => {\n                    let variant = info.variant ? info.variant : \"standard\";\n                    let { id, txtLabel, onChange, type, value, sx, InputProps, ...others } = info;\n                    return  (\n                    <Grid item key={idx} xs={colSize} sm={colSize}\n                        sx={{\n                            pb: 2,\n                        }}\n                    >\n                        <TextField\n                            id={id}\n                            name={id}\n                            label={txtLabel}\n                            fullWidth\n                            autoComplete=\"no info\"\n                            variant={variant}\n                            onChange={onChange}\n                            onFocus={ e => e.target.select() }\n                            type={type}\n                            value={value}\n                            sx={{\n                                ...sx,\n                            }}\n                            InputProps = {{ \n                                endAdornment: <InputAdornment position=\"end\">{info.endAdornment}</InputAdornment>,\n                                inputMode: 'numeric', pattern: '[0-9]*',\n                                ...InputProps,\n                            }}\n                            inputProps={{\n                                style: {\n                                  padding: '5px 10px',\n                                },\n                            }}\n                            {...others}\n                        />\n                    </Grid>\n                    )}\n                    \n                )}\n            </Grid>\n        </React.Fragment>\n        );\n    }\n\nexport default TableForm;","import React from 'react';\nimport Paper from '@mui/material/Paper';\n\n\n\nconst InfoTableContainer = (props) => (\n    <React.Fragment>\n         <Paper variant=\"outlined\" \n            sx={{ my: { xs: 1, md: 2 }, p: 1, \n                flex: \"1 1 auto\"\n          }}>\n            {props.children}\n        </Paper>\n    </React.Fragment>\n);\n\n\nexport default InfoTableContainer;","import React from 'react';\nimport TableForm from '../Components/TableForm';\nimport InfoTableContainer from './InfoTableContainer';\n\n\n\nconst BasicInfo = (props) => {\n\n    const basicInfo = [\n        {\n            label: \"실 정보\",\n            txtInfo: [{\n                id: \"yarnInfo\",\n                txtLabel: \"실 정보를 입력하세요\",\n                required: false,\n            }],\n        },\n        {\n            label: \"바늘 사이즈\",\n            txtInfo: [{\n                id: \"needleSize\",\n                txtLabel: \"바늘 사이즈를 입력하세요\",\n                required: false,\n                },\n            ],\n        },\n    ];\n    \n    return (\n    <React.Fragment>\n         <InfoTableContainer>\n             {\n                 basicInfo.map((info, idx) => (\n                    <TableForm key={idx} label={info.label} txtInfo={info.txtInfo} />\n                 ))\n             }\n        </InfoTableContainer>\n    </React.Fragment>\n    );\n}\n\n\nexport default BasicInfo;","import React from 'react';\nimport { Box } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { basicTableStyle } from '../Styles/styles';\n\n\nconst BasicTable = (props) => {\n    const { printDirection=\"row\", items, sx, ...others } = props;\n\n    // 테이블 출력 방향 row 이면 가로로, column 이면 세로로 출력\n    // repeat() 의 첫 번째 인자가 1이면 행단 1컬럼만 출력 하므로 세로 출력이 된다.\n    let repeat = items.length;\n    if(printDirection === \"column\")  repeat = 1;\n    const gridTemplateColumns = `repeat(${repeat}, 1fr)`;\n\n    return (\n        // <div style={{ width: '100%' }}>\n        <Box\n            sx={{\n                display: 'grid',\n                columnGap: 1,\n                rowGap: 1,\n                gridTemplateColumns: {gridTemplateColumns},\n                // ...sx,\n            }}\n            // {...others}\n        >\n\n        {\n            items.map((item, idx)=>(\n                    <Box key={idx}\n                        sx={{\n                            ...basicTableStyle,\n                            ...sx,\n                            ...others,\n                        }}\n                    >\n                        {item}\n                    </Box>\n            \n                ))\n        }\n\n        </Box>\n        // </div>\n    );\n}\n\nBasicTable.propTypes = {\n    sx: PropTypes.object,\n};\n\nexport default BasicTable;","import React, { useContext, useEffect, useState } from 'react';\nimport TableForm from '../Components/TableForm';\nimport InfoTableContainer from './InfoTableContainer';\nimport { appContext } from './AppMain';\nimport BasicTable from '../Components/BasicTable';\nimport { infoHighLightStyle } from '../Styles/styles';\n// import { COLOR_PRIMARY_LIGHT, COLOR_WHITE, DIVIDE_SLEEVE_COUNT } from '../utils/constants';\n\n\nconst SwatchTable = (props) => {\n    let context = useContext(appContext);\n\n    const [contractionSts, setContractionSts] = useState(0);\n    const [contractionRows, setContractionRows] = useState(0);\n\n    useEffect(() => {\n        let beforeSts = context.beforeSts;\n        let afterSts = context.afterSts;\n        // 수축률 = 세탁 전 / 세탁 후 * 100\n        if (beforeSts > 0 && afterSts > 0) {\n            let res = (beforeSts / afterSts) * 100;\n            setContractionSts(res.toFixed(2));\n        }\n    }, [context.beforeSts, context.afterSts]);\n\n    useEffect(() => {\n        let beforeRows = context.beforeRows;\n        let afterRows = context.afterRows;\n        // 수축률 = 세탁 전 / 세탁 후 * 100\n        if(beforeRows > 0 && afterRows > 0) {\n            let res = (beforeRows / afterRows) * 100;\n            setContractionRows(res.toFixed(2));\n        }\n\n    }, [context.beforeRows, context.afterRows]);\n\n    const handleChangeBeforeStitches = e => {\n        context.setBeforeSts(e.target.value);\n    };\n\n    const handleChangeBeforeRows = e => {\n        context.setBeforeRows(e.target.value);\n    };\n    const handleChangeAfterStitches = e => {\n        context.setAfterSts(e.target.value);\n        context.setAfterSts(e.target.value);\n    };\n\n    const handleChangeAfterRows = e => {\n        context.setAfterRows(e.target.value);\n    };\n\n    const swatchInfo = [\n        {\n            label: \"세탁 전\",\n            txtInfo: [\n                {\n                    id: \"beforeSts\",\n                    txtLabel: \"(숫자만)\",\n                    value: context.beforeSts,\n                    type: \"number\",\n                    onChange: handleChangeBeforeStitches,\n                    endAdornment: \"코\",\n                },\n                {\n                    id: \"beforeRows\",\n                    txtLabel: \"(숫자만)\",\n                    value: context.beforeRows,\n                    type: \"number\",\n                    onChange: handleChangeBeforeRows,\n                    endAdornment: \"단\",\n                }\n            ],\n        },\n        \n        {\n            label: \"세탁 후\",\n            txtInfo: [\n                {\n                    id: \"afterSts\",\n                    txtLabel: \"(숫자만)\",\n                    value: context.afterSts,\n                    type: \"number\",\n                    required: true,\n                    onChange: handleChangeAfterStitches,\n                    endAdornment: \"코\",\n                },\n                {\n                    id: \"afterRows\",\n                    txtLabel: \"(숫자만)\",\n                    value: context.afterRows,\n                    type: \"number\",\n                    required: true,\n                    onChange: handleChangeAfterRows,\n                    endAdornment: \"단\",\n                }\n            ],\n        },\n    ];\n\n    const results = [\n        {\n            printDirection: \"row\",\n            sx: infoHighLightStyle,\n            data: [\"수축율\", `${contractionSts} %`, `${contractionRows} %`],\n        },\n    ];\n\n    const rowTitles = [\n        {\n            printDirection: \"row\",\n            data: [\"Swatch\", \"코 수\", \" 단 수\"],\n        }\n    ];\n\n    return (\n        <React.Fragment>\n             <InfoTableContainer>                 \n                 {\n                    rowTitles.map((item, idx) => (\n                        <BasicTable key={idx} items={item.data}\n                            printDirection={item.printDirection}\n                            sx={{...item.sx}}\n\n                            />\n                    ))\n                 }\n\n                {\n                    swatchInfo.map((info, idx) => (\n                        <TableForm key={idx} label={info.label} txtInfo={info.txtInfo} />\n                    ))\n                }\n                {\n                    results.map((res, idx) => (\n                        <BasicTable key={idx} items={res.data}\n                            printDirection={res.printDirection} sx={{...res.sx}} />\n\n                    ))\n                }\n            </InfoTableContainer>\n        </React.Fragment>\n        );\n}\n\n\nexport default SwatchTable;","import { FormControlLabel, Radio, RadioGroup } from '@mui/material';\nimport React, { useContext } from 'react';\nimport BasicTable from '../Components/BasicTable';\nimport { radioButtonStyle } from '../Styles/styles';\nimport { RADIO_SEX_FEMAILE, RADIO_SEX_MAILE } from '../utils/constants';\nimport { appContext } from './AppMain';\nimport InfoTableContainer from './InfoTableContainer';\n\n\nconst SexInfo = (props) => {\n    const context = useContext(appContext);\n\n    const sexInfo = [\n        \"성별\",\n        <FormControlLabel value={RADIO_SEX_FEMAILE} \n            control={<Radio size=\"small\" />} \n            label=\"여\"\n            sx={ radioButtonStyle(context.selectedSex !== RADIO_SEX_FEMAILE) }\n        />,\n        <FormControlLabel value={RADIO_SEX_MAILE} \n            control={<Radio size=\"small\" />} \n            label=\"남\" \n            sx={ radioButtonStyle(context.selectedSex !== RADIO_SEX_MAILE) }\n        />,\n    ];\n    \n\n    const handleRadioChange = e => {\n        context.setSelectedSex(e.target.value);\n    }\n\n    return (\n    <React.Fragment>\n         <InfoTableContainer>\n        <RadioGroup row\n            aria-label=\"sexInfo\"\n            name=\"sexInfo\"\n            value={context.selectedSex}\n            onChange={handleRadioChange}\n        >\n            <BasicTable items={sexInfo} placeSelf={\"center\"} />\n        </RadioGroup>\n        </InfoTableContainer>\n    </React.Fragment>\n    );\n}\n\n\nexport default SexInfo;","import React, { useContext, useEffect, useState } from 'react';\nimport TableForm from '../Components/TableForm';\nimport InfoTableContainer from './InfoTableContainer';\nimport { appContext } from './AppMain';\nimport { DIVIDE_SLEEVE_COUNT } from '../utils/constants';\n\nconst SizeInfo = (props) => {\n    const [divSleeves, setdivSleeves] = useState(7); // 소매 나눔 수\n    let context = useContext(appContext);\n\n    useEffect(() => {\n        let afterSts = context.afterSts;\n        let neckBack = context.neckBack;\n        // 총 콧수 = 뒷목 둘레 * (세탁후 코수 / 10)\n        if(neckBack > 0){\n            let totalSts = Math.round(neckBack * (afterSts / 10));\n            context.setTotalSts(totalSts);\n            context.setTotalSts(totalSts);\n        }\n            \n    }, [context.neckBack, context]);\n\n    useEffect(() => {\n        let totalSts = context.totalSts;\n        let raglanSts = context.raglanSts;\n        if(totalSts > 0){\n            if(divSleeves <= 0) setdivSleeves(DIVIDE_SLEEVE_COUNT);\n            // 소매 콧수 = (총 콧수 / divSleeves) - (raglanSts / 2)\n            // 반올림\n            context.setSleeveStartSts(Math.round((totalSts / divSleeves)) - Math.round(raglanSts / 2));\n        }\n\n    }, [context.totalSts, divSleeves, context.raglanSts, context]);\n\n    useEffect(() => {\n        let totalSts = context.totalSts;\n        let sleeveStartSts = context.sleeveStartSts;\n        let raglanSts = context.raglanSts;\n        let frontStartSt = context.frontStartSt;\n        if(totalSts > 0 && raglanSts > 0 && sleeveStartSts > 0) {\n            // 뒷판 코수 = 총 코수 - (소매 코수 * 2) - 2(양쪽 앞섶?) - (raglanSts * 4)\n            let back = totalSts - (sleeveStartSts * 2) - (raglanSts * 4) - (frontStartSt * 2);\n            context.setBackStartSts(back);\n        }\n    }, [context.totalSts, context.setSleeveStartSts, context.raglanSts, context]);\n\n\n    const handleChangeNeckBack = e => {\n        context.setNeckBack(e.target.value);\n        context.setNeckBack(e.target.value);\n    }\n\n    const handleChangeRaglanSt = e => {\n        context.setRaglanSts(e.target.value);\n    }\n\n    const handleChangeSleeves = e => {\n        setdivSleeves(e.target.value);\n    }\n\n    const sizeInfo = [\n        {\n            label: \"뒷목 둘레\",\n            txtInfo: [\n                {\n                    id: \"neckBack\",\n                    txtLabel: \"뒷목 둘레를 입력하세요\",\n                    value: context.neckBack,\n                    type: \"number\",\n                    required: true,\n                    onChange: handleChangeNeckBack,\n                    endAdornment: \"cm\",\n                }\n            ],\n        },\n        \n        {\n            label: \"래글런코\",\n            txtInfo: [\n                {\n                    id: \"raglanSt\",\n                    txtLabel: \"래글런코를 입력하세요\",\n                    value: context.raglanSts,\n                    type: \"number\",\n                    onChange: handleChangeRaglanSt,\n                    endAdornment: \"코\",\n                    required: true,\n                },\n            ],\n        },\n        {\n            label: \"소매 나눔 수\",\n            txtInfo: [\n                {\n                    id: \"sleeves\",\n                    txtLabel: \"소매 나눔 수를 입력하세요\",\n                    value: divSleeves,\n                    type: \"number\",\n                    onChange: handleChangeSleeves,\n                    required: true,\n                    \n                },\n            ],\n        },\n    ];\n\n    return (\n        <React.Fragment>\n             <InfoTableContainer>\n                 {\n                     sizeInfo.map((info, idx) => (\n                        <TableForm key={idx} label={info.label} txtInfo={info.txtInfo} />\n                     ))\n                 }\n            </InfoTableContainer>\n        </React.Fragment>\n        );\n}\n\n\nexport default SizeInfo;","import React, { useContext } from 'react';\nimport InfoTableContainer from './InfoTableContainer';\nimport { appContext } from './AppMain';\nimport BasicTable from '../Components/BasicTable';\nimport { infoHighLightStyle } from '../Styles/styles';\n\n\nconst StartStitches = (props) => {\n    let context = useContext(appContext);\n    let raglanSts = context.raglanSts;\n    let sleeveStartSts = context.sleeveStartSts;\n    let backStartSts = context.backStartSts;\n    let frontStartSt = context.frontStartSt;\n    \n    const totalSts = [\n        {\n            printDirection: \"row\",\n            data: [\"시작 코 수\"],\n            sx: {color: \"primary.dark\"},\n        },\n        {\n            printDirection: \"row\",\n            data: [\"총 콧수\", \"소매 콧수\", \"뒷판 콧수\",],\n        },\n        {\n            printDirection:\"row\",\n            sx: infoHighLightStyle,\n            data:[context.totalSts, context.sleeveStartSts, context.backStartSts],\n        }\n    ]\n\n\n    const startInfos = [\n        {\n            bg: 0,\n            printDirection: \"row\",\n            data: [\"앞섶\", \"래글런\", \"소매\", \"래글런\", \"뒷판\", \"래글런\", \"소매\", \"래글런\", \"앞섶\"],\n        },\n        {\n            printDirection: \"row\",\n            sx: infoHighLightStyle,\n            data: [frontStartSt, raglanSts, sleeveStartSts, raglanSts, backStartSts, raglanSts, sleeveStartSts, raglanSts, frontStartSt]\n        }\n    ];\n\n\n    return (\n        <React.Fragment>\n             <InfoTableContainer>                \n                 {\n                    // Print total stitches\n                    totalSts.map((res, idx) => (\n                        // <ResultForm key={idx} label={res.label} results={res.results} />\n                        <BasicTable key={idx} items={res.data}  \n                            printDirection={res.printDirection} \n                            sx={{\n                                // border: 0.2,\n                                ...res.sx,\n                            }}\n                        /> \n                    ))\n                }\n                \n\n                 {\n                     startInfos.map((info, idx) => {\n                         return (<BasicTable key={idx} items={info.data} sx={info.sx} />)\n\n                     })\n                 }\n\n            </InfoTableContainer>\n        </React.Fragment>\n        );\n}\n\nexport default StartStitches;","import React, { useContext, useEffect, useState } from 'react';\nimport InfoTableContainer from './InfoTableContainer';\nimport { appContext } from './AppMain';\nimport BasicTable from '../Components/BasicTable';\nimport TableForm from '../Components/TableForm';\nimport { FormControlLabel, Radio, RadioGroup } from '@mui/material';\nimport { infoHighLightStyle, radioButtonStyle } from '../Styles/styles';\nimport { checkEven } from '../utils/utils';\n\n\nconst RADIO_DESIRED_LENGTH = \"length\";\nconst RADIO_DESIRED_ROWS = \"rows\";\n\nconst RADIO_WRIST_SIZE = \"size\";\nconst RADIO_WRIST_STITCHES = \"stitches\";\n\nconst SleevesInfo = (props) => {\n    let context = useContext(appContext);\n    const [selectedDesiredValue, setSelectDesiredValue] = useState(RADIO_DESIRED_LENGTH);\n    const [selectedWristValue, setSelectedWristValue] = useState(RADIO_WRIST_STITCHES);\n    const [sleeveDecreaseCount, setSleeveDecreaseCount] = useState(0);\n    const [sleeveDecreaseRowCount, setSleeveDecreaseRowCount] = useState(0);\n\n      //calculate FB Equal rows & sts\n      useEffect(() => {\n        let backStartSts = context.backStartSts;\n        let frontStartSt = context.frontStartSt;\n\n        if(backStartSts > 0 && frontStartSt > 0) {            \n            // 앞단 식: 코 수(y) = 2x(단) + (frontStartSt * 2)(앞섶 시작 코수 양쪽 1씩)\n            // 뒷판 식: 코 수(y) = x(단) + backStartSts(뒷판 시작 코 수)\n            // ==> 뒤판이 앞판 양쪽 합과 같은 코수가 되는 식: \n            // 2x + (frontStartSt * 2) = x + backStartSts => \n            //  x(fbEqualRows) = backStartSts - (frontStartSt * 2)\n            //  y(fbEqualSts) = x(fbEqualRows) + backStartSts\n            let rows = backStartSts - (frontStartSt * 2);\n            let sts = rows + backStartSts;\n            context.setFbEqualSts(sts);\n            context.setFbEqualRows(rows);\n        }\n\n    }, [context.backStartSts, context.frontStartSt, context.fbEqualSts, context]);\n\n    // 앞뒤판 코 같아진 후에 더 뜰 래글런 길이, 그 후에 소매 코수\n    useEffect(() => {\n        let afterRows = context.afterRows;\n        let sleeveStartSts = context.sleeveStartSts;\n        let fbEqualRows = context.fbEqualRows;\n        let desiredRaglanLength = context.desiredRaglanLength;\n        let desiredRaglanRows = context.desiredRaglanRows;\n\n        if(afterRows > 0 ) {\n            let lengthPerRow = 10 / afterRows;\n            let rowPerCm = afterRows / 10;\n\n            if(selectedDesiredValue === RADIO_DESIRED_LENGTH) {\n                if(desiredRaglanLength > 0) {                    \n                    // 원하는 총 래글런 길이에서 이미 뜬만큼의 길이를 빼고 나머지 떠야할 단을 계산\n                    let currLength = fbEqualRows * lengthPerRow;\n                    let rows = Math.round((desiredRaglanLength - currLength) * rowPerCm); \n                    context.setDesiredRaglanRows(rows);\n                }\n            } else if(selectedDesiredValue === RADIO_DESIRED_ROWS) {\n                if(desiredRaglanRows > 0) {\n                    // 총 래글런 길이 구하기\n                    // 입력한 단 수에 이미 뜬 만큼의 단을 더한 후 길이 계산\n                    let length = Math.round((desiredRaglanRows + fbEqualRows) * lengthPerRow);\n                    context.setDesiredRaglanLength(length);\n                }\n            }\n        }\n\n\n        // 소매 분리 코\n        let sleeve = sleeveStartSts;\n        if (desiredRaglanRows > 0) {\n            // 소매 코수(한 쪽): sleeveStartSts += ( ((fbEqualRows + desiredRaglanLength)) / 2 * 2) \n            // (2단에 2코씩 늘리므로 총 단 수만큼 만 해주면 됨) + raglan 2\n            sleeve = sleeveStartSts + (fbEqualRows + desiredRaglanRows) + 2; // 양쪽 래글런에서 하나씩 더 해서 +2\n            context.setSleeveSeperateSts(sleeve);\n\n            context.setSleeveTotalSts(sleeve + context.bwlCastOn);\n        }\n\n    }, [selectedDesiredValue, context, context.fbEqualRows, context.sleeveStartSts,\n         context.afterRows, context.desiredRaglanLength, context.desiredRaglanRows,\n         context.bwlCastOn,\n        ]);\n\n        // 소매 단 수\n        useEffect(() => {\n            // 소매길이 * (세탁후 단수 / 10)\n            const afterRows = context.afterRows;\n            if(afterRows > 0) {\n                let sleeveRowCount = context.sleeveLength * (context.afterRows / 10);\n                context.setSleeveRowCount(Math.round(sleeveRowCount));\n            }\n\n        }, [context, context.afterRows, context.sleeveLength]);\n\n\n    // 손목 둘레, 손목 콧수\n    useEffect(() => {\n        if(selectedWristValue === RADIO_WRIST_SIZE){\n            let wristSize = context.wristSize;\n\n            if(wristSize > 0 && context.afterSts > 0) {\n                let wristSts = Math.round((wristSize * (context.afterSts / 10)));\n                context.setWristSts(wristSts);\n            }\n\n        } else if(selectedWristValue === RADIO_WRIST_STITCHES){\n            let wristSts = context.wristSts;\n\n            if(wristSts > 0 && context.afterSts > 0) { \n                let wristSize = Math.round(wristSts / (context.afterSts / 10));\n                context.setWristSize(wristSize);\n            }\n        }\n    }, [selectedWristValue, context, context.wristSize, context.wristSts, context.afterSts]);\n\n\n    // 소매줄임 계산\n    useEffect(() => {\n        let decreaseCount = Math.floor((context.sleeveTotalSts - context.wristSts));\n        // 한 번에 2코씩 줄이므로 줄임 코수를 짝수로 만들자.\n        if(!checkEven(decreaseCount)) decreaseCount -= 1;\n        setSleeveDecreaseCount(decreaseCount);\n\n        // 한 번에 2코씩 줄이므로 남은 코를 반으로 나눔\n        const decreaseRowCount = sleeveDecreaseCount / 2;\n        setSleeveDecreaseRowCount(decreaseRowCount);\n    \n    }, [sleeveDecreaseCount, context.sleeveTotalStsext, context.sleeveTotalSts, context.wristSts]);\n\n\n\n\n    const handleDesiredRaglanLengthOnChange = e => {\n            context.setDesiredRaglanLength(Number(e.target.value));\n    };\n\n    const handleDesiredRaglanLengthOnFocus = e => {\n        setSelectDesiredValue(RADIO_DESIRED_LENGTH);\n    }\n\n    const handleDesiredRaglanRowsOnChange = e => {\n            context.setDesiredRaglanRows(Number(e.target.value));\n    };\n\n    const handleDesiredRaglanRowsOnFocus = e => {\n        setSelectDesiredValue(RADIO_DESIRED_ROWS);\n    }\n\n    const handleRadioDesiredValueChange = e => {\n        setSelectDesiredValue(e.target.value);\n    };\n\n    const handleSleeveSeperateStsChange = e => {\n        // context.setSleeveSeperateSts(e.targe.value);\n        console.log(\"handleSleeveSeperateStsChange:::\", e.target.value);\n    }\n\n    const handleBWLCastOnChange = e => {\n        context.setBwlCastOn(Number(e.target.value));\n    }\n\n    const handleSleeveLengthOnChange = e => {\n        context.setSleeveLength(Number(e.target.value));\n    }\n\n    const handleWristSizeOnChange = e => {\n        context.setWristSize(Number(e.target.value));\n    }\n\n    const handleWristSizeOnFocus = e => {\n        setSelectedWristValue(RADIO_WRIST_SIZE);\n    }\n\n    const handleWristStsOnChange = e => {\n        // console.log(\"handleWristStsOnChange::::::: \", e.target.value);\n        context.setWristSts(Number(e.target.value));\n    }\n\n    const handleWristStsOnFocus = e => {\n        setSelectedWristValue(RADIO_WRIST_STITCHES);\n    }\n\n    const handleRadioWristValueChange = e => {\n        setSelectedWristValue(e.target.value);\n    }\n\n    const handleSleeveTotalOnChange = e => {\n        \n    }\n\n    const handleSleeveRowCountOnChange = e => {\n        // context.setSleeveRowCount(e.target.value);\n    }\n\n\n    const fbInfos = [\n        {\n            printDrection: \"row\",\n            data: [\"뒷판의 콧수와 앞판 두 개를 더한 콧수가 같을 때까지 뜨기(겉뜨기 단에서만 코 늘림)\"],\n            sx: { color: \"primary.dark\" },\n\n        },\n        {\n            printDrection: \"row\",\n            data: [\"앞 뒤 콧수가 같아지는 단\", \"같아지는 콧수\"],\n        },\n        {\n            printDirection: \"row\",\n            sx: infoHighLightStyle,\n            data: [`${context.fbEqualRows}단`, `${context.fbEqualSts}코`],\n        },\n    ];\n\n    // const fbEqualHeader = [\"뒷판의 콧수와 앞판 두 개를 더한 콧수가 같을 때까지 뜨기(겉뜨기 단에서만 코 늘림)\"];\n    // const fbHeader = [\"첫 코와 마지막 코 늘림 없이 래글린 앞뒤만 늘리며 계속 뜨기\"];\n    const headers = {\n        // fbEqual: [\"뒷판의 콧수와 앞판 두 개를 더한 콧수가 같을 때까지 뜨기(겉뜨기 단에서만 코 늘림)\"],\n        fbHeader: {\n            printDrection: \"row\",\n            data: [\"첫 코와 마지막 코 늘림 없이 래글린 앞뒤만 늘리며 계속 뜨기\"],\n            sx: { color: \"primary.dark\" },\n    \n        },\n        sleeves: {\n            printDrection: \"row\",\n            data: [\"소매 정보\"],\n            sx: { color: \"primary.dark\" },\n    \n        },\n    };\n\n    const moreInfos = [\n        {\n            label: <FormControlLabel value={RADIO_DESIRED_LENGTH} \n                    control={<Radio/>} \n                    label=\"총 래글런 길이\"\n                    sx={ radioButtonStyle(selectedDesiredValue !== RADIO_DESIRED_LENGTH) }\n                    />,\n            txtInfo: [\n                {\n                    id: \"desireRaglanLegnth\",\n                    value: context.desiredRaglanLength,\n                    txtLabel: \"원하는 길이를 입력하면 단 수가 아래에 계산됩니다.\",\n                    type: \"number\",\n                    required: false,\n                    onChange: handleDesiredRaglanLengthOnChange,\n                    onFocus: handleDesiredRaglanLengthOnFocus,\n                    endAdornment: \"cm\",\n                    // disabled: (selectedDesiredValue === RADIO_DESIRED_LENGTH) ? false : true\n                }\n            ],\n        },\n        \n        {\n            label: <FormControlLabel value={RADIO_DESIRED_ROWS} \n                    control={<Radio />}  \n                    label=\"떠야하는 단 수\"\n                    sx={ radioButtonStyle(selectedDesiredValue !== RADIO_DESIRED_ROWS) }\n                    />,\n            txtInfo: [\n                {\n                    id: \"desiredRaglanRows\",\n                    value: context.desiredRaglanRows,\n                    txtLabel: \"원하는 단 수를 직접 입력해도 됩니다.\",\n                    type: \"number\",\n                    required: false,\n                    onChange: handleDesiredRaglanRowsOnChange,\n                    onFocus: handleDesiredRaglanRowsOnFocus,\n                    endAdornment: \"단 더\",\n                    // disabled: (selectedDesiredValue === RADIO_DESIRED_ROWS) ? false : true,\n                    InputProps: {\n                        sx: infoHighLightStyle,\n                    }\n                }\n            ],\n        },\n    ];\n\n    const sleevesInfos = [\n        {\n            label: \"소매 분리 코\",\n            txtInfo: [\n                {\n                    id: \"sleeveSeperateSts\",\n                    value: context.sleeveSeperateSts,\n                    txtLabel: \"소매 분리 코\",\n                    type: \"number\",\n                    required: true,\n                    onChange: handleSleeveSeperateStsChange,\n                    endAdornment: \"코\",\n                    disabled: true,\n                },\n            ]\n        },\n        {\n            label: \"감아코\",\n            txtInfo: [{\n                id: \"bwlCastOn\",\n                value: context.bwlCastOn,\n                type: \"number\",\n                txtLabel: \"짝수로 입력하세요\",\n                onChange: handleBWLCastOnChange,\n                endAdornment: \"코\",\n            },]\n        },\n        {\n            label: \"총 소매 코\",\n            txtInfo: [{\n                id: \"sleeveTotalSts\",\n                value: context.sleeveTotalSts,\n                type: \"number\",\n                txtLabel: \"소매 총 코 수\",\n                onChange: handleSleeveTotalOnChange,\n                endAdornment: \"코\",\n                InputProps: {\n                    sx: infoHighLightStyle,\n                }\n            },]\n        },\n        {\n            label: \"소매길이 (고무단 제외)\",\n            txtInfo: [{\n                id: \"sleeveLength\",\n                value: context.sleeveLength,\n                type: \"number\",\n                txtLabel: \"소매 길이를 입력하세요\",\n                onChange: handleSleeveLengthOnChange,\n                endAdornment: \"cm\",\n            },]\n        },\n        {\n            label: \"소매단수\",\n            txtInfo: [{\n                id: \"sleeveRowCount\",\n                value: context.sleeveRowCount,\n                type: \"number\",\n                txtLabel: \"소매 단 수\",\n                onChange: handleSleeveRowCountOnChange,\n                endAdornment: \"단\",\n                // disabled: true,\n                InputProps: {\n                    sx: infoHighLightStyle,\n                }\n            },]\n        },\n    ];\n\n    const wristInfos = [\n        {\n            label: <FormControlLabel value={RADIO_WRIST_SIZE} \n                    control={<Radio />} \n                    label=\"손목둘레\"\n                    sx={ radioButtonStyle(selectedWristValue !== RADIO_WRIST_SIZE) }\n                    />,\n             txtInfo: [{\n                id: \"WristSize\",\n                value: context.wristSize,\n                type: \"number\",\n                txtLabel: \"손목 둘레를 입력하세요.\",\n                onChange: handleWristSizeOnChange,\n                onFocus: handleWristSizeOnFocus,\n                endAdornment: \"cm\",\n                // disabled: (selectedWristValue === RADIO_WRIST_SIZE) ? false : true,\n             }],\n        },\n        {\n            label: <FormControlLabel value={RADIO_WRIST_STITCHES} \n                    control={<Radio />} \n                    label=\"손목콧수\"\n                    sx={ radioButtonStyle(selectedWristValue !== RADIO_WRIST_STITCHES) } \n                />,\n             txtInfo: [{\n                id: \"WristSts\",\n                value: context.wristSts,\n                type: \"number\",\n                txtLabel: \"손목 콧수를 입력하세요.\",\n                onChange: handleWristStsOnChange,\n                onFocus: handleWristStsOnFocus,\n                endAdornment: \"코\",\n                // disabled: (selectedWristValue === RADIO_WRIST_STITCHES) ? false : true,\n                InputProps: {\n                    sx: infoHighLightStyle,\n                }\n             }],\n        }\n    ];\n\n    // let sleeveDecreaseCount = Math.floor((context.sleeveTotalSts - context.wristSts));\n    // // 한 번에 2코씩 줄이므로 줄임 코수를 짝수로 만들자.\n    // if(!checkEven(sleeveDecreaseCount)) sleeveDecreaseCount -= 1;\n    // // 한 번에 2코씩 줄이므로 남은 코를 반으로 나눔\n    // const decreaseRowCount = sleeveDecreaseCount / 2;  \n    // const sleeveRow\n    const sleeveDecreaseInfo = [\n        {\n            prindDirection: \"row\",\n            sx: infoHighLightStyle,\n            data: [`소매 줄임: ${sleeveDecreaseCount}코`, `${sleeveDecreaseRowCount} 단마다 2 코씩 줄임`],\n        },\n    ];\n\n    return (\n        <React.Fragment>\n            {/* 앞 뒤 콧수 같아지는 단 */}\n            <InfoTableContainer>\n                {\n                    fbInfos.map((info, idx) => {\n                        return (<BasicTable key={idx} items={info.data} sx={info.sx} />)\n                    })\n                }\n            </InfoTableContainer>\n\n            {/* 래글런 길이 */}\n            <InfoTableContainer>\n                <BasicTable items={headers.fbHeader.data} sx={headers.fbHeader.sx} />\n                <RadioGroup row\n                    aria-label=\"desiredRaglanValue\"\n                    name=\"desiredRaglanValue\"\n                    value={selectedDesiredValue}\n                    onChange={handleRadioDesiredValueChange}\n                >\n\n                {\n                moreInfos.map((info, idx) => (\n                    <TableForm key={idx} label={info.label} txtInfo={info.txtInfo} />\n                ))\n                }\n            </RadioGroup>\n            </InfoTableContainer>\n            \n            {/* 소매 정보 */}\n            <InfoTableContainer>\n                <BasicTable items={headers.sleeves.data} sx={headers.sleeves.sx} />\n                {\n                sleevesInfos.map((info, idx) => (\n                    <TableForm key={idx} label={info.label} txtInfo={info.txtInfo} />\n                ))\n                }\n            </InfoTableContainer>\n\n            {/* 손목 둘레나 손목 콧수 중 선택 */}\n            <InfoTableContainer>\n                <RadioGroup row\n                    aria-label=\"wristValue\"\n                    name=\"wristValue\"\n                    value={selectedWristValue}\n                    onChange={handleRadioWristValueChange}\n                >\n                {\n                wristInfos.map((info, idx) => (\n                    <TableForm key={idx} label={info.label} txtInfo={info.txtInfo} />\n                ))\n                }\n                </RadioGroup>\n            </InfoTableContainer>\n\n            {/* 소매 줄임 */}\n            <InfoTableContainer>\n            {\n                sleeveDecreaseInfo.map((info, idx) => (\n                    <BasicTable key={idx} items={info.data} sx={info.sx} />\n                ))\n                }\n            </InfoTableContainer>\n            \n        </React.Fragment>\n    );\n}\n\n\nexport default SleevesInfo;","// 홀짝 판별\nexport const checkEven = num => {\n    return ((num % 2) === 0);\n}","import React, { useState } from 'react';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport BasicInfo from './BasicInfo';\nimport SwatchTable from './SwatchTable';\nimport SexInfo from './SexInfo';\nimport Box from '@mui/material/Box';\nimport SizeInfo from './SizeInifo';\nimport { CssBaseline, Grid, Link } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faYoutube, faInstagram, faRavelry, faEtsy } from '@fortawesome/free-brands-svg-icons'\nimport { BRAND_YOUTUBE, BRAND_INSTAGRAM, BRAND_RAVELRY, BRAND_ETSY, COLOR_PRIMARY_MAIN, RADIO_SEX_FEMAILE } from '../utils/constants';\nimport { generateBrandStyles } from '../Styles/styles';\nimport StartStitches from './StartStitches';\nimport SleevesInfo from './SleevesInfo';\nimport BasicContainer from './BasicContainer';\n\n\nexport const appContext = React.createContext();\nappContext.displayName = '컨텍스트!!!!!';\nconst AppProvider = (props) => {\n    // const [beforeSts, setBeforeSts] = useState(0); // 세탁 전 스와 코 수\n    // const [afterSts, setAfterSts] = useState(19); // 세탁 후 스와치 코 수\n    // const [beforeRows, setBeforeRows] = useState(0); // 세탁 전  스와치 단 수\n    // const [afterRows, setAfterRows] = useState(26);\n    // const [neckBack, setNeckBack] = useState(36); // 뒷목 둘레\n\n    // const [sleeveSeperateSts, setSleeveSeperateSts] = useState(0) // 소매 분리한 코수\n    // const [bwlCastOn, setBwlCastOn] = useState(6); // 감아코 수\n    // const [sleeveTotalSts, setSleeveTotalSts] = useState(0); // 소매 총 코수(소매분리 코 + 감아코)\n    // const [sleeveLength, setSleeveLength] = useState(31); // 소매 길이\n    // const [sleeveRowCount, setSleeveRowCount] = useState(0); // 소매 단수\n    // const [wristSize, setWristSize] = useState(0); // 손목 사이즈\n    // const [wristSts, setWristSts] = useState(50); // 손목 코수\n\n    // const [desiredRaglanLength, setDesiredRaglanLength] = useState(20); // 원하는 래글런 길이\n    // const [desiredRaglanRows, setDesiredRaglanRows] = useState(0); // 원하느느 래글런 단수\n\n    const [beforeSts, setBeforeSts] = useState(0); // 세탁 전 스와 코 수\n    const [afterSts, setAfterSts] = useState(0); // 세탁 후 스와치 코 수\n    const [beforeRows, setBeforeRows] = useState(0); // 세탁 전  스와치 단 수\n    const [afterRows, setAfterRows] = useState(0);\n    const [neckBack, setNeckBack] = useState(0); // 뒷목 둘레\n\n    const [sleeveSeperateSts, setSleeveSeperateSts] = useState(0) // 소매 분리한 코수\n    const [bwlCastOn, setBwlCastOn] = useState(0); // 감아코 수\n    const [sleeveTotalSts, setSleeveTotalSts] = useState(0); // 소매 총 코수(소매분리 코 + 감아코)\n    const [sleeveLength, setSleeveLength] = useState(0); // 소매 길이\n    const [sleeveRowCount, setSleeveRowCount] = useState(0); // 소매 단수\n    const [wristSize, setWristSize] = useState(0); // 손목 사이즈\n    const [wristSts, setWristSts] = useState(0); // 손목 코수\n\n    const [desiredRaglanLength, setDesiredRaglanLength] = useState(0); // 원하는 래글런 길이\n    const [desiredRaglanRows, setDesiredRaglanRows] = useState(0); // 원하느느 래글런 단수\n\n\n\n    const [totalSts, setTotalSts] = useState(0); // 총 코수\n    const [sleeveStartSts, setSleeveStartSts] = useState(0); // 소매 시작 코수\n    const [backStartSts, setBackStartSts] = useState(0); // 뒷판 코수\n    const [raglanSts, setRaglanSts] = useState(2); // raglan\n    const [frontStartSt, setFrontStartSt] = useState(1); // 앞섶 시작 코 수\n    const [fbEqualRows, setFbEqualRows] = useState(0); // 뒷판과 앞판(양쪽 합)의 코 수가 같아지는 단 수\n    const [fbEqualSts, setFbEqualSts] = useState(0); // 뒷판 앞판 같아지는 코수\n\n    const [selectedSex, setSelectedSex] = useState(RADIO_SEX_FEMAILE);\n    \n    \n    \n    const contextValue = {afterSts, setAfterSts, neckBack, setNeckBack, totalSts, setTotalSts,\n        sleeveStartSts, setSleeveStartSts, backStartSts, setBackStartSts, raglanSts, setRaglanSts,\n        beforeSts, setBeforeSts, beforeRows, setBeforeRows, afterRows, setAfterRows,\n        frontStartSt, setFrontStartSt, fbEqualRows, setFbEqualRows, fbEqualSts, setFbEqualSts,\n        sleeveSeperateSts, setSleeveSeperateSts, desiredRaglanLength, setDesiredRaglanLength, desiredRaglanRows, setDesiredRaglanRows,\n        selectedSex, setSelectedSex, bwlCastOn, setBwlCastOn, sleeveLength, setSleeveLength,\n        sleeveTotalSts, setSleeveTotalSts, sleeveRowCount, setSleeveRowCount,\n        wristSize, setWristSize, wristSts, setWristSts,\n    };\n    return (\n        <appContext.Provider value={contextValue}>\n            {props.children}\n        </appContext.Provider>\n    );\n}\n\n\nconst MyLink = (props) => {\n    let brandStyles = generateBrandStyles(props.brand);\n    let styles = makeStyles(brandStyles)();\n\n    return (\n    <React.Fragment>\n        <Link className={styles.link} sx={{ color:'inherit' }}\n            target=\"_blank\" rel=\"noopener\" \n            href={props.href}\n        >\n            <FontAwesomeIcon icon={props.icon} />\n        </Link>{' '}\n    </React.Fragment>\n    );\n}\n\nconst Copyright = () => (\n    <React.Fragment>\n    <Grid container flexdirection=\"column\" justify=\"center\" justifyContent=\"center\" spacing={1} alignItems=\"center\"\n        sx={{ flexGrow: 1 }}\n    >\n        <Grid item xs={12}>\n            <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n                {'Copyright © Fleur Sarang Crochet'}{' '}\n                {new Date().getFullYear()}\n                {'.'}\n            </Typography>\n        </Grid>\n\n        <Grid item xs={12}>\n            <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\"\n                sx={{}}\n            >\n                <MyLink href=\"https://www.youtube.com/c/FleurSarangCrochet\" icon={faYoutube} brand={BRAND_YOUTUBE} />\n                <MyLink href=\"https://www.instagram.com/fleursarang\" icon={faInstagram} brand={BRAND_INSTAGRAM} />\n                <MyLink href=\"https://www.ravelry.com/patterns/sources/fleurs-sarangs-ravelry-store\" icon={faRavelry} brand={BRAND_RAVELRY} />\n                <MyLink href=\"https://www.etsy.com/shop/FleurSarang\" icon={faEtsy} brand={BRAND_ETSY} />\n            </Typography>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n)\n\nconst Header = () => (\n    <React.Fragment>\n    <Box sx={{ display: 'flex', justifyContent: 'flex-end', pb: '20px' }}>\n        <AppBar\n            position=\"absolute\"\n            color=\"default\"\n            elevation={0}\n            sx={{\n                position: 'relative',\n                borderBottom: (t) => `1px solid ${t.palette.divider}`,\n            }}\n        >\n            <Toolbar>\n                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                스티치 계산기\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    </Box>\n    </React.Fragment>\n)\n\n  const Footer = () => {\n      return (\n        <React.Fragment>\n        <Box sx={{ display: 'flex', justifyContent: 'flex-end', pt: '110px' }}>\n            <AppBar position=\"fixed\" \n                color=\"default\"\n                elevation={4}\n                sx={{ \n                    top: 'auto', \n                    bottom: 0,\n                    pt: '10px',\n                    pb: '30px',\n                    borderTop: (t) => `1px solid ${t.palette.divider}`,\n                }}>\n                <Toolbar>\n                    <Copyright />\n                </Toolbar>\n            </AppBar>\n        </Box>\n        </React.Fragment>\n      )\n  }\n\nconst AppMain = (props) => {\n    return (\n    <React.Fragment>\n        <AppProvider>\n            <Header />\n            <Typography variant=\"subtitle2\" color=\"inherit\" align=\"center\" \n                sx={{p:2, pb:0}}\n            >\n                아직 실험 중입니다. 오류가 있으면 알려주세요. ^-^\n            </Typography>\n            <Typography variant=\"subtitle2\" color=\"inherit\" align=\"center\" \n                sx={{p:2, pt:0}}\n            >\n                (fleursarang.crochet@gmail.com)\n            </Typography>\n            <Container component=\"main\" maxWidth=\"lg\" sx={{ mb: 2 }} >\n                <Typography variant=\"h5\" color=\"inherit\" align=\"center\" \n                    sx={{p:1, color: COLOR_PRIMARY_MAIN}}\n                >\n                    V-Neck Cardigan\n                </Typography>\n\n                {/* <BasicContainer> */}\n                    {/* <BasicContainer direction=\"column\"> */}\n                        <BasicInfo />\n                        <SexInfo />\n                    {/* </BasicContainer> */}\n                    <SwatchTable />\n                {/* </BasicContainer> */}\n                \n                {/* <BasicContainer> */}\n                    <SizeInfo />\n                    <StartStitches />\n                {/* </BasicContainer> */}\n\n                <SleevesInfo />\n            </Container>\n        </AppProvider>\n        <CssBaseline />\n        <Footer />\n    </React.Fragment>\n    )\n}\n\nexport default AppMain;","\nimport React from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport AppMain from './Containers/AppMain';\nimport { GTM_CONTAINER_ID } from './utils/gaConfig';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport TagManager from 'react-gtm-module';\n\nconst theme = createTheme();\n\n// const addGoogleAnalyticsScript = () => {\n//   return {\n//     _html: `window.dataLayer = windwo.dataLayer || [];\n//       function gtag(){dataLayer.push(arguments);}\n      \n//       gtag(‘js’, new Date());\n//       gtag(‘config’, ‘${gaTrackingId}’, {\n// \t      page_path: window.location.pathname,\n//       });`\n//       // __html: `\n//       //     window.dataLayer = window.dataLayer || [];\n//       //     function gtag(){dataLayer.push(arguments);}\n//       //     gtag('js', new Date());\n\n//       //     gtag('config', '${gaTrackingId}');\n//       //     page_path: window.location.pathname;\n//       // `,\n//   };\n// }\n\n\nconst tagManagerArgs = {\n  gtmId: GTM_CONTAINER_ID,\n};\n\nTagManager.initialize(tagManagerArgs);\nconst GaScript = () => (\n  <Helmet>\n      <title>{\"Fleur Sarang Crochet\"}</title>\n      {/*스크립트 추가*/}\n      {/* <script async src={`https://www.googletagmanager.com/gtag/js?id=${gaTrackingId}`}></script>\n      {/*위에서 생성한 html 추/}\n      <script\n          dangerouslySetInnerHTML={addGoogleAnalyticsScript()}\n      /> */}\n  </Helmet>\n);\n\n\nfunction App() {\n  // useEffect(() => {\n  //   const handleRouteChangeComplete = (url) => {\n  //       if(typeof window === 'object'){\n  //           const { title } = window.document;\n  //           const { href, pathname } = window.location;\n\n  //           window.gtag('config', gaTrackingId, {\n  //               page_title: title,\n  //               page_location: href,\n  //               page_path: pathname,\n  //           });\n  //       }\n  //   };\n  //   // Router.events.on('routeChangeComplete', handleRouteChangeComplete);\n\n  //   // return () => {\n  //   //     Router.events.off('routeChangeComplete', handleRouteChangeComplete);\n  //   // }\n  // });\n\n  return (\n    <HelmetProvider>\n      <ThemeProvider theme={theme}>\n        {/* <GaScript /> */}\n        <CssBaseline />\n        <AppMain />\n      </ThemeProvider>\n    </HelmetProvider>\n  );\n}\n\nexport default App;\n","// google analytics\nexport const gaTrackingId = \"G-LW1CK49GHY\";\nexport const GTM_CONTAINER_ID = \"GTM-PXTQNBK\";\n// export const GTM_CONTAINER_ID = \"GTM-KCSSGRV\";\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}